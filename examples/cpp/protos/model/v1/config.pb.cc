// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/config.proto

#include "protos/model/v1/config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fros_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROSLocalization_protos_2fmodel_2fv1_2fros_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fros_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto;
namespace v1 {
namespace model {
class AgentConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgentConfiguration> _instance;
} _AgentConfiguration_default_instance_;
class AgentConfigurationDocument_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgentConfigurationDocument_TagsEntry_DoNotUse> _instance;
} _AgentConfigurationDocument_TagsEntry_DoNotUse_default_instance_;
class AgentConfigurationDocumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgentConfigurationDocument> _instance;
} _AgentConfigurationDocument_default_instance_;
class TelemetryConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TelemetryConfiguration> _instance;
} _TelemetryConfiguration_default_instance_;
class ApplicationConfiguration_ConfigurationMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> _instance;
} _ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_default_instance_;
class ApplicationConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplicationConfiguration> _instance;
} _ApplicationConfiguration_default_instance_;
class ResourcesConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourcesConfiguration> _instance;
} _ResourcesConfiguration_default_instance_;
class DiskConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiskConfiguration> _instance;
} _DiskConfiguration_default_instance_;
class ROSConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROSConfiguration> _instance;
} _ROSConfiguration_default_instance_;
class StreamConfiguration_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamConfiguration_TagsEntry_DoNotUse> _instance;
} _StreamConfiguration_TagsEntry_DoNotUse_default_instance_;
class StreamConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamConfiguration> _instance;
  const ::v1::model::ROSTopic* ros_topic_;
  const ::v1::model::ROSLocalization* ros_localization_;
  const ::v1::model::DirectoryWatch* directory_watch_;
  const ::v1::model::FileTail* file_tail_;
} _StreamConfiguration_default_instance_;
class DirectoryWatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectoryWatch> _instance;
} _DirectoryWatch_default_instance_;
class FileTailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileTail> _instance;
} _FileTail_default_instance_;
}  // namespace model
}  // namespace v1
static void InitDefaultsAgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_AgentConfiguration_default_instance_;
    new (ptr) ::v1::model::AgentConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::AgentConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsAgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_AgentConfigurationDocument_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse();
  }
  ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsAgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_AgentConfigurationDocument_default_instance_;
    new (ptr) ::v1::model::AgentConfigurationDocument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::AgentConfigurationDocument::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_AgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsTelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_TelemetryConfiguration_default_instance_;
    new (ptr) ::v1::model::TelemetryConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::TelemetryConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_default_instance_;
    new (ptr) ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse();
  }
  ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ApplicationConfiguration_default_instance_;
    new (ptr) ::v1::model::ApplicationConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ApplicationConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ResourcesConfiguration_default_instance_;
    new (ptr) ::v1::model::ResourcesConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ResourcesConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_DiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsDiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_DiskConfiguration_default_instance_;
    new (ptr) ::v1::model::DiskConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::DiskConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ROSConfiguration_default_instance_;
    new (ptr) ::v1::model::ROSConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ROSConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsStreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_StreamConfiguration_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::v1::model::StreamConfiguration_TagsEntry_DoNotUse();
  }
  ::v1::model::StreamConfiguration_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsStreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_StreamConfiguration_default_instance_;
    new (ptr) ::v1::model::StreamConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::StreamConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsStreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto}, {
      &scc_info_StreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto.base,
      &scc_info_ROSLocalization_protos_2fmodel_2fv1_2fros_2eproto.base,
      &scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto.base,
      &scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto.base,}};

static void InitDefaultsDirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_DirectoryWatch_default_instance_;
    new (ptr) ::v1::model::DirectoryWatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::DirectoryWatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

static void InitDefaultsFileTail_protos_2fmodel_2fv1_2fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_FileTail_default_instance_;
    new (ptr) ::v1::model::FileTail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::FileTail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileTail_protos_2fmodel_2fv1_2fconfig_2eproto}, {}};

void InitDefaults_protos_2fmodel_2fv1_2fconfig_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgentConfigurationDocument_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamConfiguration_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfiguration, id_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfiguration, name_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfiguration, document_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, version_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, tags_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, telemetry_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, resources_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentConfigurationDocument, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::TelemetryConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::TelemetryConfiguration, streams_),
  PROTOBUF_FIELD_OFFSET(::v1::model::TelemetryConfiguration, ros_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ApplicationConfiguration, configuration_map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ResourcesConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ResourcesConfiguration, disk_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::DiskConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::DiskConfiguration, buffer_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSConfiguration, world_reference_frame_id_),
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration, name_),
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration, tags_),
  offsetof(::v1::model::StreamConfigurationDefaultTypeInternal, ros_topic_),
  offsetof(::v1::model::StreamConfigurationDefaultTypeInternal, ros_localization_),
  offsetof(::v1::model::StreamConfigurationDefaultTypeInternal, directory_watch_),
  offsetof(::v1::model::StreamConfigurationDefaultTypeInternal, file_tail_),
  PROTOBUF_FIELD_OFFSET(::v1::model::StreamConfiguration, configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::DirectoryWatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::DirectoryWatch, directory_),
  PROTOBUF_FIELD_OFFSET(::v1::model::DirectoryWatch, extension_),
  PROTOBUF_FIELD_OFFSET(::v1::model::DirectoryWatch, file_type_),
  PROTOBUF_FIELD_OFFSET(::v1::model::DirectoryWatch, remote_agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, filename_),
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, file_format_),
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, time_key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, time_format_),
  PROTOBUF_FIELD_OFFSET(::v1::model::FileTail, regex_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v1::model::AgentConfiguration)},
  { 8, 15, sizeof(::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse)},
  { 17, -1, sizeof(::v1::model::AgentConfigurationDocument)},
  { 27, -1, sizeof(::v1::model::TelemetryConfiguration)},
  { 34, 41, sizeof(::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse)},
  { 43, -1, sizeof(::v1::model::ApplicationConfiguration)},
  { 49, -1, sizeof(::v1::model::ResourcesConfiguration)},
  { 55, -1, sizeof(::v1::model::DiskConfiguration)},
  { 61, -1, sizeof(::v1::model::ROSConfiguration)},
  { 67, 74, sizeof(::v1::model::StreamConfiguration_TagsEntry_DoNotUse)},
  { 76, -1, sizeof(::v1::model::StreamConfiguration)},
  { 88, -1, sizeof(::v1::model::DirectoryWatch)},
  { 97, -1, sizeof(::v1::model::FileTail)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_AgentConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_AgentConfigurationDocument_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_AgentConfigurationDocument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_TelemetryConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ApplicationConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ResourcesConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_DiskConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ROSConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_StreamConfiguration_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_StreamConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_DirectoryWatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_FileTail_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto = {
  {}, AddDescriptors_protos_2fmodel_2fv1_2fconfig_2eproto, "protos/model/v1/config.proto", schemas,
  file_default_instances, TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto::offsets,
  file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto, 13, file_level_enum_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto, file_level_service_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto,
};

const char descriptor_table_protodef_protos_2fmodel_2fv1_2fconfig_2eproto[] =
  "\n\034protos/model/v1/config.proto\022\010v1.model"
  "\032\031protos/model/v1/ros.proto\"f\n\022AgentConf"
  "iguration\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\0226\n\010d"
  "ocument\030\003 \001(\0132$.v1.model.AgentConfigurat"
  "ionDocument\"\273\002\n\032AgentConfigurationDocume"
  "nt\022\017\n\007version\030\001 \001(\005\022<\n\004tags\030\002 \003(\0132..v1.m"
  "odel.AgentConfigurationDocument.TagsEntr"
  "y\0223\n\ttelemetry\030\003 \001(\0132 .v1.model.Telemetr"
  "yConfiguration\0223\n\tresources\030\004 \001(\0132 .v1.m"
  "odel.ResourcesConfiguration\0227\n\013applicati"
  "on\030\005 \001(\0132\".v1.model.ApplicationConfigura"
  "tion\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"q\n\026TelemetryConfiguration\022.\n\007s"
  "treams\030\001 \003(\0132\035.v1.model.StreamConfigurat"
  "ion\022\'\n\003ros\030\002 \001(\0132\032.v1.model.ROSConfigura"
  "tion\"\250\001\n\030ApplicationConfiguration\022S\n\021con"
  "figuration_map\030\001 \003(\01328.v1.model.Applicat"
  "ionConfiguration.ConfigurationMapEntry\0327"
  "\n\025ConfigurationMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
  "value\030\002 \001(\t:\0028\001\"C\n\026ResourcesConfiguratio"
  "n\022)\n\004disk\030\001 \001(\0132\033.v1.model.DiskConfigura"
  "tion\"(\n\021DiskConfiguration\022\023\n\013buffer_size"
  "\030\001 \001(\003\"4\n\020ROSConfiguration\022 \n\030world_refe"
  "rence_frame_id\030\001 \001(\t\"\326\002\n\023StreamConfigura"
  "tion\022\014\n\004name\030\001 \001(\t\0225\n\004tags\030\002 \003(\0132\'.v1.mo"
  "del.StreamConfiguration.TagsEntry\022\'\n\tros"
  "_topic\030\003 \001(\0132\022.v1.model.ROSTopicH\000\0225\n\020ro"
  "s_localization\030\004 \001(\0132\031.v1.model.ROSLocal"
  "izationH\000\0223\n\017directory_watch\030\005 \001(\0132\030.v1."
  "model.DirectoryWatchH\000\022\'\n\tfile_tail\030\006 \001("
  "\0132\022.v1.model.FileTailH\000\032+\n\tTagsEntry\022\013\n\003"
  "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\017\n\rconfigur"
  "ation\"s\n\016DirectoryWatch\022\021\n\tdirectory\030\001 \001"
  "(\t\022\021\n\textension\030\002 \001(\t\022%\n\tfile_type\030\003 \001(\016"
  "2\022.v1.model.FileType\022\024\n\014remote_agent\030\004 \001"
  "(\010\"}\n\010FileTail\022\020\n\010filename\030\001 \001(\t\022)\n\013file"
  "_format\030\002 \001(\0162\024.v1.model.FileFormat\022\020\n\010t"
  "ime_key\030\003 \001(\t\022\023\n\013time_format\030\004 \001(\t\022\r\n\005re"
  "gex\030\005 \001(\t*&\n\nFileFormat\022\016\n\nPLAIN_TEXT\020\000\022"
  "\010\n\004JSON\020\001*0\n\010FileType\022\010\n\004FILE\020\000\022\t\n\005IMAGE"
  "\020\001\022\017\n\013POINT_CLOUD\020\004B+Z)github.com/Forman"
  "tIO/genproto/go/v1/modelb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protos_2fmodel_2fv1_2fconfig_2eproto = {
  false, InitDefaults_protos_2fmodel_2fv1_2fconfig_2eproto, 
  descriptor_table_protodef_protos_2fmodel_2fv1_2fconfig_2eproto,
  "protos/model/v1/config.proto", &assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto, 1672,
};

void AddDescriptors_protos_2fmodel_2fv1_2fconfig_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_protos_2fmodel_2fv1_2fros_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fconfig_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fmodel_2fv1_2fconfig_2eproto = []() { AddDescriptors_protos_2fmodel_2fv1_2fconfig_2eproto(); return true; }();
namespace v1 {
namespace model {
const ::google::protobuf::EnumDescriptor* FileFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return file_level_enum_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto[0];
}
bool FileFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FileType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return file_level_enum_descriptors_protos_2fmodel_2fv1_2fconfig_2eproto[1];
}
bool FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AgentConfiguration::InitAsDefaultInstance() {
  ::v1::model::_AgentConfiguration_default_instance_._instance.get_mutable()->document_ = const_cast< ::v1::model::AgentConfigurationDocument*>(
      ::v1::model::AgentConfigurationDocument::internal_default_instance());
}
class AgentConfiguration::HasBitSetters {
 public:
  static const ::v1::model::AgentConfigurationDocument& document(const AgentConfiguration* msg);
};

const ::v1::model::AgentConfigurationDocument&
AgentConfiguration::HasBitSetters::document(const AgentConfiguration* msg) {
  return *msg->document_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgentConfiguration::kIdFieldNumber;
const int AgentConfiguration::kNameFieldNumber;
const int AgentConfiguration::kDocumentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgentConfiguration::AgentConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.AgentConfiguration)
}
AgentConfiguration::AgentConfiguration(const AgentConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_document()) {
    document_ = new ::v1::model::AgentConfigurationDocument(*from.document_);
  } else {
    document_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.AgentConfiguration)
}

void AgentConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  document_ = nullptr;
}

AgentConfiguration::~AgentConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.AgentConfiguration)
  SharedDtor();
}

void AgentConfiguration::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete document_;
}

void AgentConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgentConfiguration& AgentConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AgentConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void AgentConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.AgentConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AgentConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AgentConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.AgentConfiguration.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.AgentConfiguration.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .v1.model.AgentConfigurationDocument document = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::AgentConfigurationDocument::_InternalParse;
        object = msg->mutable_document();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AgentConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.AgentConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.AgentConfiguration.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.AgentConfiguration.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.AgentConfigurationDocument document = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.AgentConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.AgentConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AgentConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.AgentConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentConfiguration.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentConfiguration.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .v1.model.AgentConfigurationDocument document = 3;
  if (this->has_document()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::document(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.AgentConfiguration)
}

::google::protobuf::uint8* AgentConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.AgentConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentConfiguration.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentConfiguration.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .v1.model.AgentConfigurationDocument document = 3;
  if (this->has_document()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::document(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.AgentConfiguration)
  return target;
}

size_t AgentConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.AgentConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .v1.model.AgentConfigurationDocument document = 3;
  if (this->has_document()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *document_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgentConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.AgentConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<AgentConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.AgentConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.AgentConfiguration)
    MergeFrom(*source);
  }
}

void AgentConfiguration::MergeFrom(const AgentConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.AgentConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_document()) {
    mutable_document()->::v1::model::AgentConfigurationDocument::MergeFrom(from.document());
  }
}

void AgentConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.AgentConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentConfiguration::CopyFrom(const AgentConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.AgentConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfiguration::IsInitialized() const {
  return true;
}

void AgentConfiguration::Swap(AgentConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgentConfiguration::InternalSwap(AgentConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(document_, other->document_);
}

::google::protobuf::Metadata AgentConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

AgentConfigurationDocument_TagsEntry_DoNotUse::AgentConfigurationDocument_TagsEntry_DoNotUse() {}
AgentConfigurationDocument_TagsEntry_DoNotUse::AgentConfigurationDocument_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void AgentConfigurationDocument_TagsEntry_DoNotUse::MergeFrom(const AgentConfigurationDocument_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AgentConfigurationDocument_TagsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[1];
}
void AgentConfigurationDocument_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AgentConfigurationDocument_TagsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      AgentConfigurationDocument_TagsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.AgentConfigurationDocument.TagsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.AgentConfigurationDocument.TagsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void AgentConfigurationDocument::InitAsDefaultInstance() {
  ::v1::model::_AgentConfigurationDocument_default_instance_._instance.get_mutable()->telemetry_ = const_cast< ::v1::model::TelemetryConfiguration*>(
      ::v1::model::TelemetryConfiguration::internal_default_instance());
  ::v1::model::_AgentConfigurationDocument_default_instance_._instance.get_mutable()->resources_ = const_cast< ::v1::model::ResourcesConfiguration*>(
      ::v1::model::ResourcesConfiguration::internal_default_instance());
  ::v1::model::_AgentConfigurationDocument_default_instance_._instance.get_mutable()->application_ = const_cast< ::v1::model::ApplicationConfiguration*>(
      ::v1::model::ApplicationConfiguration::internal_default_instance());
}
class AgentConfigurationDocument::HasBitSetters {
 public:
  static const ::v1::model::TelemetryConfiguration& telemetry(const AgentConfigurationDocument* msg);
  static const ::v1::model::ResourcesConfiguration& resources(const AgentConfigurationDocument* msg);
  static const ::v1::model::ApplicationConfiguration& application(const AgentConfigurationDocument* msg);
};

const ::v1::model::TelemetryConfiguration&
AgentConfigurationDocument::HasBitSetters::telemetry(const AgentConfigurationDocument* msg) {
  return *msg->telemetry_;
}
const ::v1::model::ResourcesConfiguration&
AgentConfigurationDocument::HasBitSetters::resources(const AgentConfigurationDocument* msg) {
  return *msg->resources_;
}
const ::v1::model::ApplicationConfiguration&
AgentConfigurationDocument::HasBitSetters::application(const AgentConfigurationDocument* msg) {
  return *msg->application_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgentConfigurationDocument::kVersionFieldNumber;
const int AgentConfigurationDocument::kTagsFieldNumber;
const int AgentConfigurationDocument::kTelemetryFieldNumber;
const int AgentConfigurationDocument::kResourcesFieldNumber;
const int AgentConfigurationDocument::kApplicationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgentConfigurationDocument::AgentConfigurationDocument()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.AgentConfigurationDocument)
}
AgentConfigurationDocument::AgentConfigurationDocument(const AgentConfigurationDocument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  if (from.has_telemetry()) {
    telemetry_ = new ::v1::model::TelemetryConfiguration(*from.telemetry_);
  } else {
    telemetry_ = nullptr;
  }
  if (from.has_resources()) {
    resources_ = new ::v1::model::ResourcesConfiguration(*from.resources_);
  } else {
    resources_ = nullptr;
  }
  if (from.has_application()) {
    application_ = new ::v1::model::ApplicationConfiguration(*from.application_);
  } else {
    application_ = nullptr;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:v1.model.AgentConfigurationDocument)
}

void AgentConfigurationDocument::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ::memset(&telemetry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&telemetry_)) + sizeof(version_));
}

AgentConfigurationDocument::~AgentConfigurationDocument() {
  // @@protoc_insertion_point(destructor:v1.model.AgentConfigurationDocument)
  SharedDtor();
}

void AgentConfigurationDocument::SharedDtor() {
  if (this != internal_default_instance()) delete telemetry_;
  if (this != internal_default_instance()) delete resources_;
  if (this != internal_default_instance()) delete application_;
}

void AgentConfigurationDocument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgentConfigurationDocument& AgentConfigurationDocument::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AgentConfigurationDocument_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void AgentConfigurationDocument::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.AgentConfigurationDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  if (GetArenaNoVirtual() == nullptr && telemetry_ != nullptr) {
    delete telemetry_;
  }
  telemetry_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resources_ != nullptr) {
    delete resources_;
  }
  resources_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  version_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AgentConfigurationDocument::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AgentConfigurationDocument*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> tags = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->tags_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .v1.model.TelemetryConfiguration telemetry = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::TelemetryConfiguration::_InternalParse;
        object = msg->mutable_telemetry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.ResourcesConfiguration resources = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ResourcesConfiguration::_InternalParse;
        object = msg->mutable_resources();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.ApplicationConfiguration application = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ApplicationConfiguration::_InternalParse;
        object = msg->mutable_application();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AgentConfigurationDocument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.AgentConfigurationDocument)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          AgentConfigurationDocument_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AgentConfigurationDocument_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.AgentConfigurationDocument.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.AgentConfigurationDocument.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.TelemetryConfiguration telemetry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_telemetry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ResourcesConfiguration resources = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ApplicationConfiguration application = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_application()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.AgentConfigurationDocument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.AgentConfigurationDocument)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AgentConfigurationDocument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.AgentConfigurationDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // map<string, string> tags = 2;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.AgentConfigurationDocument.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.AgentConfigurationDocument.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AgentConfigurationDocument_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AgentConfigurationDocument_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.TelemetryConfiguration telemetry = 3;
  if (this->has_telemetry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::telemetry(this), output);
  }

  // .v1.model.ResourcesConfiguration resources = 4;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::resources(this), output);
  }

  // .v1.model.ApplicationConfiguration application = 5;
  if (this->has_application()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::application(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.AgentConfigurationDocument)
}

::google::protobuf::uint8* AgentConfigurationDocument::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.AgentConfigurationDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // map<string, string> tags = 2;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.AgentConfigurationDocument.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.AgentConfigurationDocument.TagsEntry.value");
      }
    };

    if (false &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AgentConfigurationDocument_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AgentConfigurationDocument_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.TelemetryConfiguration telemetry = 3;
  if (this->has_telemetry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::telemetry(this), target);
  }

  // .v1.model.ResourcesConfiguration resources = 4;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::resources(this), target);
  }

  // .v1.model.ApplicationConfiguration application = 5;
  if (this->has_application()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::application(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.AgentConfigurationDocument)
  return target;
}

size_t AgentConfigurationDocument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.AgentConfigurationDocument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<AgentConfigurationDocument_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .v1.model.TelemetryConfiguration telemetry = 3;
  if (this->has_telemetry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *telemetry_);
  }

  // .v1.model.ResourcesConfiguration resources = 4;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resources_);
  }

  // .v1.model.ApplicationConfiguration application = 5;
  if (this->has_application()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *application_);
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgentConfigurationDocument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.AgentConfigurationDocument)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentConfigurationDocument* source =
      ::google::protobuf::DynamicCastToGenerated<AgentConfigurationDocument>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.AgentConfigurationDocument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.AgentConfigurationDocument)
    MergeFrom(*source);
  }
}

void AgentConfigurationDocument::MergeFrom(const AgentConfigurationDocument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.AgentConfigurationDocument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.has_telemetry()) {
    mutable_telemetry()->::v1::model::TelemetryConfiguration::MergeFrom(from.telemetry());
  }
  if (from.has_resources()) {
    mutable_resources()->::v1::model::ResourcesConfiguration::MergeFrom(from.resources());
  }
  if (from.has_application()) {
    mutable_application()->::v1::model::ApplicationConfiguration::MergeFrom(from.application());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void AgentConfigurationDocument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.AgentConfigurationDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentConfigurationDocument::CopyFrom(const AgentConfigurationDocument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.AgentConfigurationDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfigurationDocument::IsInitialized() const {
  return true;
}

void AgentConfigurationDocument::Swap(AgentConfigurationDocument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgentConfigurationDocument::InternalSwap(AgentConfigurationDocument* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.Swap(&other->tags_);
  swap(telemetry_, other->telemetry_);
  swap(resources_, other->resources_);
  swap(application_, other->application_);
  swap(version_, other->version_);
}

::google::protobuf::Metadata AgentConfigurationDocument::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TelemetryConfiguration::InitAsDefaultInstance() {
  ::v1::model::_TelemetryConfiguration_default_instance_._instance.get_mutable()->ros_ = const_cast< ::v1::model::ROSConfiguration*>(
      ::v1::model::ROSConfiguration::internal_default_instance());
}
class TelemetryConfiguration::HasBitSetters {
 public:
  static const ::v1::model::ROSConfiguration& ros(const TelemetryConfiguration* msg);
};

const ::v1::model::ROSConfiguration&
TelemetryConfiguration::HasBitSetters::ros(const TelemetryConfiguration* msg) {
  return *msg->ros_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TelemetryConfiguration::kStreamsFieldNumber;
const int TelemetryConfiguration::kRosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TelemetryConfiguration::TelemetryConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.TelemetryConfiguration)
}
TelemetryConfiguration::TelemetryConfiguration(const TelemetryConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      streams_(from.streams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ros()) {
    ros_ = new ::v1::model::ROSConfiguration(*from.ros_);
  } else {
    ros_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.TelemetryConfiguration)
}

void TelemetryConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  ros_ = nullptr;
}

TelemetryConfiguration::~TelemetryConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.TelemetryConfiguration)
  SharedDtor();
}

void TelemetryConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete ros_;
}

void TelemetryConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TelemetryConfiguration& TelemetryConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TelemetryConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void TelemetryConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.TelemetryConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  streams_.Clear();
  if (GetArenaNoVirtual() == nullptr && ros_ != nullptr) {
    delete ros_;
  }
  ros_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TelemetryConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TelemetryConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .v1.model.StreamConfiguration streams = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::v1::model::StreamConfiguration::_InternalParse;
          object = msg->add_streams();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .v1.model.ROSConfiguration ros = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ROSConfiguration::_InternalParse;
        object = msg->mutable_ros();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TelemetryConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.TelemetryConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .v1.model.StreamConfiguration streams = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_streams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ROSConfiguration ros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.TelemetryConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.TelemetryConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TelemetryConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.TelemetryConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.model.StreamConfiguration streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->streams(static_cast<int>(i)),
      output);
  }

  // .v1.model.ROSConfiguration ros = 2;
  if (this->has_ros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::ros(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.TelemetryConfiguration)
}

::google::protobuf::uint8* TelemetryConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.TelemetryConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.model.StreamConfiguration streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->streams(static_cast<int>(i)), target);
  }

  // .v1.model.ROSConfiguration ros = 2;
  if (this->has_ros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::ros(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.TelemetryConfiguration)
  return target;
}

size_t TelemetryConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.TelemetryConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v1.model.StreamConfiguration streams = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->streams_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->streams(static_cast<int>(i)));
    }
  }

  // .v1.model.ROSConfiguration ros = 2;
  if (this->has_ros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ros_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TelemetryConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.TelemetryConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const TelemetryConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<TelemetryConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.TelemetryConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.TelemetryConfiguration)
    MergeFrom(*source);
  }
}

void TelemetryConfiguration::MergeFrom(const TelemetryConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.TelemetryConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  streams_.MergeFrom(from.streams_);
  if (from.has_ros()) {
    mutable_ros()->::v1::model::ROSConfiguration::MergeFrom(from.ros());
  }
}

void TelemetryConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.TelemetryConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TelemetryConfiguration::CopyFrom(const TelemetryConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.TelemetryConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TelemetryConfiguration::IsInitialized() const {
  return true;
}

void TelemetryConfiguration::Swap(TelemetryConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TelemetryConfiguration::InternalSwap(TelemetryConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&streams_)->InternalSwap(CastToBase(&other->streams_));
  swap(ros_, other->ros_);
}

::google::protobuf::Metadata TelemetryConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse() {}
ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::MergeFrom(const ApplicationConfiguration_ConfigurationMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[4];
}
void ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.ApplicationConfiguration.ConfigurationMapEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.ApplicationConfiguration.ConfigurationMapEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ApplicationConfiguration::InitAsDefaultInstance() {
}
class ApplicationConfiguration::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplicationConfiguration::kConfigurationMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplicationConfiguration::ApplicationConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ApplicationConfiguration)
}
ApplicationConfiguration::ApplicationConfiguration(const ApplicationConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  configuration_map_.MergeFrom(from.configuration_map_);
  // @@protoc_insertion_point(copy_constructor:v1.model.ApplicationConfiguration)
}

void ApplicationConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
}

ApplicationConfiguration::~ApplicationConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.ApplicationConfiguration)
  SharedDtor();
}

void ApplicationConfiguration::SharedDtor() {
}

void ApplicationConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationConfiguration& ApplicationConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplicationConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void ApplicationConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ApplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configuration_map_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplicationConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplicationConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, string> configuration_map = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->configuration_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ApplicationConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> configuration_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          ApplicationConfiguration_ConfigurationMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ApplicationConfiguration_ConfigurationMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&configuration_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ApplicationConfiguration.ConfigurationMapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ApplicationConfiguration.ConfigurationMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ApplicationConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ApplicationConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplicationConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ApplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> configuration_map = 1;
  if (!this->configuration_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ApplicationConfiguration.ConfigurationMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ApplicationConfiguration.ConfigurationMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->configuration_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->configuration_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->configuration_map().begin();
          it != this->configuration_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(configuration_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->configuration_map().begin();
          it != this->configuration_map().end(); ++it) {
        entry.reset(configuration_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ApplicationConfiguration)
}

::google::protobuf::uint8* ApplicationConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ApplicationConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> configuration_map = 1;
  if (!this->configuration_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ApplicationConfiguration.ConfigurationMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ApplicationConfiguration.ConfigurationMapEntry.value");
      }
    };

    if (false &&
        this->configuration_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->configuration_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->configuration_map().begin();
          it != this->configuration_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(configuration_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->configuration_map().begin();
          it != this->configuration_map().end(); ++it) {
        entry.reset(configuration_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ApplicationConfiguration)
  return target;
}

size_t ApplicationConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ApplicationConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> configuration_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->configuration_map_size());
  {
    ::std::unique_ptr<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->configuration_map().begin();
        it != this->configuration_map().end(); ++it) {
      entry.reset(configuration_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ApplicationConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<ApplicationConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ApplicationConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ApplicationConfiguration)
    MergeFrom(*source);
  }
}

void ApplicationConfiguration::MergeFrom(const ApplicationConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ApplicationConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configuration_map_.MergeFrom(from.configuration_map_);
}

void ApplicationConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ApplicationConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationConfiguration::CopyFrom(const ApplicationConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ApplicationConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationConfiguration::IsInitialized() const {
  return true;
}

void ApplicationConfiguration::Swap(ApplicationConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplicationConfiguration::InternalSwap(ApplicationConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  configuration_map_.Swap(&other->configuration_map_);
}

::google::protobuf::Metadata ApplicationConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourcesConfiguration::InitAsDefaultInstance() {
  ::v1::model::_ResourcesConfiguration_default_instance_._instance.get_mutable()->disk_ = const_cast< ::v1::model::DiskConfiguration*>(
      ::v1::model::DiskConfiguration::internal_default_instance());
}
class ResourcesConfiguration::HasBitSetters {
 public:
  static const ::v1::model::DiskConfiguration& disk(const ResourcesConfiguration* msg);
};

const ::v1::model::DiskConfiguration&
ResourcesConfiguration::HasBitSetters::disk(const ResourcesConfiguration* msg) {
  return *msg->disk_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourcesConfiguration::kDiskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourcesConfiguration::ResourcesConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ResourcesConfiguration)
}
ResourcesConfiguration::ResourcesConfiguration(const ResourcesConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_disk()) {
    disk_ = new ::v1::model::DiskConfiguration(*from.disk_);
  } else {
    disk_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.ResourcesConfiguration)
}

void ResourcesConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  disk_ = nullptr;
}

ResourcesConfiguration::~ResourcesConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.ResourcesConfiguration)
  SharedDtor();
}

void ResourcesConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete disk_;
}

void ResourcesConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourcesConfiguration& ResourcesConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourcesConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void ResourcesConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ResourcesConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && disk_ != nullptr) {
    delete disk_;
  }
  disk_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourcesConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourcesConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .v1.model.DiskConfiguration disk = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::DiskConfiguration::_InternalParse;
        object = msg->mutable_disk();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourcesConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ResourcesConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v1.model.DiskConfiguration disk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ResourcesConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ResourcesConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourcesConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ResourcesConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.model.DiskConfiguration disk = 1;
  if (this->has_disk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::disk(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ResourcesConfiguration)
}

::google::protobuf::uint8* ResourcesConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ResourcesConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.model.DiskConfiguration disk = 1;
  if (this->has_disk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::disk(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ResourcesConfiguration)
  return target;
}

size_t ResourcesConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ResourcesConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .v1.model.DiskConfiguration disk = 1;
  if (this->has_disk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourcesConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ResourcesConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourcesConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<ResourcesConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ResourcesConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ResourcesConfiguration)
    MergeFrom(*source);
  }
}

void ResourcesConfiguration::MergeFrom(const ResourcesConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ResourcesConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_disk()) {
    mutable_disk()->::v1::model::DiskConfiguration::MergeFrom(from.disk());
  }
}

void ResourcesConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ResourcesConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourcesConfiguration::CopyFrom(const ResourcesConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ResourcesConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourcesConfiguration::IsInitialized() const {
  return true;
}

void ResourcesConfiguration::Swap(ResourcesConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourcesConfiguration::InternalSwap(ResourcesConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disk_, other->disk_);
}

::google::protobuf::Metadata ResourcesConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DiskConfiguration::InitAsDefaultInstance() {
}
class DiskConfiguration::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiskConfiguration::kBufferSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiskConfiguration::DiskConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.DiskConfiguration)
}
DiskConfiguration::DiskConfiguration(const DiskConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buffer_size_ = from.buffer_size_;
  // @@protoc_insertion_point(copy_constructor:v1.model.DiskConfiguration)
}

void DiskConfiguration::SharedCtor() {
  buffer_size_ = PROTOBUF_LONGLONG(0);
}

DiskConfiguration::~DiskConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.DiskConfiguration)
  SharedDtor();
}

void DiskConfiguration::SharedDtor() {
}

void DiskConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DiskConfiguration& DiskConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DiskConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void DiskConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.DiskConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DiskConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DiskConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 buffer_size = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_buffer_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DiskConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.DiskConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 buffer_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffer_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.DiskConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.DiskConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DiskConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.DiskConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 buffer_size = 1;
  if (this->buffer_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->buffer_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.DiskConfiguration)
}

::google::protobuf::uint8* DiskConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.DiskConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 buffer_size = 1;
  if (this->buffer_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->buffer_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.DiskConfiguration)
  return target;
}

size_t DiskConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.DiskConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 buffer_size = 1;
  if (this->buffer_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->buffer_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiskConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.DiskConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const DiskConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<DiskConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.DiskConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.DiskConfiguration)
    MergeFrom(*source);
  }
}

void DiskConfiguration::MergeFrom(const DiskConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.DiskConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffer_size() != 0) {
    set_buffer_size(from.buffer_size());
  }
}

void DiskConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.DiskConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskConfiguration::CopyFrom(const DiskConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.DiskConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskConfiguration::IsInitialized() const {
  return true;
}

void DiskConfiguration::Swap(DiskConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiskConfiguration::InternalSwap(DiskConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(buffer_size_, other->buffer_size_);
}

::google::protobuf::Metadata DiskConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ROSConfiguration::InitAsDefaultInstance() {
}
class ROSConfiguration::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROSConfiguration::kWorldReferenceFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROSConfiguration::ROSConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ROSConfiguration)
}
ROSConfiguration::ROSConfiguration(const ROSConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  world_reference_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.world_reference_frame_id().size() > 0) {
    world_reference_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.world_reference_frame_id_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.ROSConfiguration)
}

void ROSConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  world_reference_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ROSConfiguration::~ROSConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.ROSConfiguration)
  SharedDtor();
}

void ROSConfiguration::SharedDtor() {
  world_reference_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ROSConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROSConfiguration& ROSConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ROSConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void ROSConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ROSConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  world_reference_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ROSConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ROSConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string world_reference_frame_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.ROSConfiguration.world_reference_frame_id");
        object = msg->mutable_world_reference_frame_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROSConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ROSConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string world_reference_frame_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_world_reference_frame_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->world_reference_frame_id().data(), static_cast<int>(this->world_reference_frame_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSConfiguration.world_reference_frame_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ROSConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ROSConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ROSConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ROSConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string world_reference_frame_id = 1;
  if (this->world_reference_frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->world_reference_frame_id().data(), static_cast<int>(this->world_reference_frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSConfiguration.world_reference_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->world_reference_frame_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ROSConfiguration)
}

::google::protobuf::uint8* ROSConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ROSConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string world_reference_frame_id = 1;
  if (this->world_reference_frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->world_reference_frame_id().data(), static_cast<int>(this->world_reference_frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSConfiguration.world_reference_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->world_reference_frame_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ROSConfiguration)
  return target;
}

size_t ROSConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ROSConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string world_reference_frame_id = 1;
  if (this->world_reference_frame_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->world_reference_frame_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROSConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ROSConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const ROSConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<ROSConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ROSConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ROSConfiguration)
    MergeFrom(*source);
  }
}

void ROSConfiguration::MergeFrom(const ROSConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ROSConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.world_reference_frame_id().size() > 0) {

    world_reference_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.world_reference_frame_id_);
  }
}

void ROSConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ROSConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROSConfiguration::CopyFrom(const ROSConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ROSConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROSConfiguration::IsInitialized() const {
  return true;
}

void ROSConfiguration::Swap(ROSConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROSConfiguration::InternalSwap(ROSConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  world_reference_frame_id_.Swap(&other->world_reference_frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ROSConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

StreamConfiguration_TagsEntry_DoNotUse::StreamConfiguration_TagsEntry_DoNotUse() {}
StreamConfiguration_TagsEntry_DoNotUse::StreamConfiguration_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void StreamConfiguration_TagsEntry_DoNotUse::MergeFrom(const StreamConfiguration_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StreamConfiguration_TagsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[9];
}
void StreamConfiguration_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamConfiguration_TagsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      StreamConfiguration_TagsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.StreamConfiguration.TagsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.StreamConfiguration.TagsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void StreamConfiguration::InitAsDefaultInstance() {
  ::v1::model::_StreamConfiguration_default_instance_.ros_topic_ = const_cast< ::v1::model::ROSTopic*>(
      ::v1::model::ROSTopic::internal_default_instance());
  ::v1::model::_StreamConfiguration_default_instance_.ros_localization_ = const_cast< ::v1::model::ROSLocalization*>(
      ::v1::model::ROSLocalization::internal_default_instance());
  ::v1::model::_StreamConfiguration_default_instance_.directory_watch_ = const_cast< ::v1::model::DirectoryWatch*>(
      ::v1::model::DirectoryWatch::internal_default_instance());
  ::v1::model::_StreamConfiguration_default_instance_.file_tail_ = const_cast< ::v1::model::FileTail*>(
      ::v1::model::FileTail::internal_default_instance());
}
class StreamConfiguration::HasBitSetters {
 public:
  static const ::v1::model::ROSTopic& ros_topic(const StreamConfiguration* msg);
  static const ::v1::model::ROSLocalization& ros_localization(const StreamConfiguration* msg);
  static const ::v1::model::DirectoryWatch& directory_watch(const StreamConfiguration* msg);
  static const ::v1::model::FileTail& file_tail(const StreamConfiguration* msg);
};

const ::v1::model::ROSTopic&
StreamConfiguration::HasBitSetters::ros_topic(const StreamConfiguration* msg) {
  return *msg->configuration_.ros_topic_;
}
const ::v1::model::ROSLocalization&
StreamConfiguration::HasBitSetters::ros_localization(const StreamConfiguration* msg) {
  return *msg->configuration_.ros_localization_;
}
const ::v1::model::DirectoryWatch&
StreamConfiguration::HasBitSetters::directory_watch(const StreamConfiguration* msg) {
  return *msg->configuration_.directory_watch_;
}
const ::v1::model::FileTail&
StreamConfiguration::HasBitSetters::file_tail(const StreamConfiguration* msg) {
  return *msg->configuration_.file_tail_;
}
void StreamConfiguration::set_allocated_ros_topic(::v1::model::ROSTopic* ros_topic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (ros_topic) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ros_topic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ros_topic, submessage_arena);
    }
    set_has_ros_topic();
    configuration_.ros_topic_ = ros_topic;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.StreamConfiguration.ros_topic)
}
void StreamConfiguration::clear_ros_topic() {
  if (has_ros_topic()) {
    delete configuration_.ros_topic_;
    clear_has_configuration();
  }
}
void StreamConfiguration::set_allocated_ros_localization(::v1::model::ROSLocalization* ros_localization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (ros_localization) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ros_localization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ros_localization, submessage_arena);
    }
    set_has_ros_localization();
    configuration_.ros_localization_ = ros_localization;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.StreamConfiguration.ros_localization)
}
void StreamConfiguration::clear_ros_localization() {
  if (has_ros_localization()) {
    delete configuration_.ros_localization_;
    clear_has_configuration();
  }
}
void StreamConfiguration::set_allocated_directory_watch(::v1::model::DirectoryWatch* directory_watch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (directory_watch) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      directory_watch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, directory_watch, submessage_arena);
    }
    set_has_directory_watch();
    configuration_.directory_watch_ = directory_watch;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.StreamConfiguration.directory_watch)
}
void StreamConfiguration::set_allocated_file_tail(::v1::model::FileTail* file_tail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (file_tail) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      file_tail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_tail, submessage_arena);
    }
    set_has_file_tail();
    configuration_.file_tail_ = file_tail;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.StreamConfiguration.file_tail)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamConfiguration::kNameFieldNumber;
const int StreamConfiguration::kTagsFieldNumber;
const int StreamConfiguration::kRosTopicFieldNumber;
const int StreamConfiguration::kRosLocalizationFieldNumber;
const int StreamConfiguration::kDirectoryWatchFieldNumber;
const int StreamConfiguration::kFileTailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamConfiguration::StreamConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.StreamConfiguration)
}
StreamConfiguration::StreamConfiguration(const StreamConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_configuration();
  switch (from.configuration_case()) {
    case kRosTopic: {
      mutable_ros_topic()->::v1::model::ROSTopic::MergeFrom(from.ros_topic());
      break;
    }
    case kRosLocalization: {
      mutable_ros_localization()->::v1::model::ROSLocalization::MergeFrom(from.ros_localization());
      break;
    }
    case kDirectoryWatch: {
      mutable_directory_watch()->::v1::model::DirectoryWatch::MergeFrom(from.directory_watch());
      break;
    }
    case kFileTail: {
      mutable_file_tail()->::v1::model::FileTail::MergeFrom(from.file_tail());
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.StreamConfiguration)
}

void StreamConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_configuration();
}

StreamConfiguration::~StreamConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.StreamConfiguration)
  SharedDtor();
}

void StreamConfiguration::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_configuration()) {
    clear_configuration();
  }
}

void StreamConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamConfiguration& StreamConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamConfiguration_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void StreamConfiguration::clear_configuration() {
// @@protoc_insertion_point(one_of_clear_start:v1.model.StreamConfiguration)
  switch (configuration_case()) {
    case kRosTopic: {
      delete configuration_.ros_topic_;
      break;
    }
    case kRosLocalization: {
      delete configuration_.ros_localization_;
      break;
    }
    case kDirectoryWatch: {
      delete configuration_.directory_watch_;
      break;
    }
    case kFileTail: {
      delete configuration_.file_tail_;
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIGURATION_NOT_SET;
}


void StreamConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.StreamConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_configuration();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.StreamConfiguration.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> tags = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::v1::model::StreamConfiguration_TagsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->tags_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .v1.model.ROSTopic ros_topic = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ROSTopic::_InternalParse;
        object = msg->mutable_ros_topic();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.ROSLocalization ros_localization = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ROSLocalization::_InternalParse;
        object = msg->mutable_ros_localization();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.DirectoryWatch directory_watch = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::DirectoryWatch::_InternalParse;
        object = msg->mutable_directory_watch();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.FileTail file_tail = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::FileTail::_InternalParse;
        object = msg->mutable_file_tail();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.StreamConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.StreamConfiguration.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          StreamConfiguration_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StreamConfiguration_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.StreamConfiguration.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.StreamConfiguration.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ROSTopic ros_topic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ros_topic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ROSLocalization ros_localization = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ros_localization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.DirectoryWatch directory_watch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_directory_watch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.FileTail file_tail = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_tail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.StreamConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.StreamConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.StreamConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.StreamConfiguration.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<string, string> tags = 2;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.StreamConfiguration.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.StreamConfiguration.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StreamConfiguration_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<StreamConfiguration_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.ROSTopic ros_topic = 3;
  if (has_ros_topic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::ros_topic(this), output);
  }

  // .v1.model.ROSLocalization ros_localization = 4;
  if (has_ros_localization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::ros_localization(this), output);
  }

  // .v1.model.DirectoryWatch directory_watch = 5;
  if (has_directory_watch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::directory_watch(this), output);
  }

  // .v1.model.FileTail file_tail = 6;
  if (has_file_tail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::file_tail(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.StreamConfiguration)
}

::google::protobuf::uint8* StreamConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.StreamConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.StreamConfiguration.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<string, string> tags = 2;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.StreamConfiguration.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.StreamConfiguration.TagsEntry.value");
      }
    };

    if (false &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StreamConfiguration_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<StreamConfiguration_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.ROSTopic ros_topic = 3;
  if (has_ros_topic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::ros_topic(this), target);
  }

  // .v1.model.ROSLocalization ros_localization = 4;
  if (has_ros_localization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::ros_localization(this), target);
  }

  // .v1.model.DirectoryWatch directory_watch = 5;
  if (has_directory_watch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::directory_watch(this), target);
  }

  // .v1.model.FileTail file_tail = 6;
  if (has_file_tail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::file_tail(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.StreamConfiguration)
  return target;
}

size_t StreamConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.StreamConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<StreamConfiguration_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (configuration_case()) {
    // .v1.model.ROSTopic ros_topic = 3;
    case kRosTopic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.ros_topic_);
      break;
    }
    // .v1.model.ROSLocalization ros_localization = 4;
    case kRosLocalization: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.ros_localization_);
      break;
    }
    // .v1.model.DirectoryWatch directory_watch = 5;
    case kDirectoryWatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.directory_watch_);
      break;
    }
    // .v1.model.FileTail file_tail = 6;
    case kFileTail: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.file_tail_);
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.StreamConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<StreamConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.StreamConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.StreamConfiguration)
    MergeFrom(*source);
  }
}

void StreamConfiguration::MergeFrom(const StreamConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.StreamConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.configuration_case()) {
    case kRosTopic: {
      mutable_ros_topic()->::v1::model::ROSTopic::MergeFrom(from.ros_topic());
      break;
    }
    case kRosLocalization: {
      mutable_ros_localization()->::v1::model::ROSLocalization::MergeFrom(from.ros_localization());
      break;
    }
    case kDirectoryWatch: {
      mutable_directory_watch()->::v1::model::DirectoryWatch::MergeFrom(from.directory_watch());
      break;
    }
    case kFileTail: {
      mutable_file_tail()->::v1::model::FileTail::MergeFrom(from.file_tail());
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
}

void StreamConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.StreamConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamConfiguration::CopyFrom(const StreamConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.StreamConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamConfiguration::IsInitialized() const {
  return true;
}

void StreamConfiguration::Swap(StreamConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamConfiguration::InternalSwap(StreamConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.Swap(&other->tags_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(configuration_, other->configuration_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata StreamConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DirectoryWatch::InitAsDefaultInstance() {
}
class DirectoryWatch::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectoryWatch::kDirectoryFieldNumber;
const int DirectoryWatch::kExtensionFieldNumber;
const int DirectoryWatch::kFileTypeFieldNumber;
const int DirectoryWatch::kRemoteAgentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectoryWatch::DirectoryWatch()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.DirectoryWatch)
}
DirectoryWatch::DirectoryWatch(const DirectoryWatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extension().size() > 0) {
    extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  ::memcpy(&file_type_, &from.file_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_agent_) -
    reinterpret_cast<char*>(&file_type_)) + sizeof(remote_agent_));
  // @@protoc_insertion_point(copy_constructor:v1.model.DirectoryWatch)
}

void DirectoryWatch::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_agent_) -
      reinterpret_cast<char*>(&file_type_)) + sizeof(remote_agent_));
}

DirectoryWatch::~DirectoryWatch() {
  // @@protoc_insertion_point(destructor:v1.model.DirectoryWatch)
  SharedDtor();
}

void DirectoryWatch::SharedDtor() {
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DirectoryWatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DirectoryWatch& DirectoryWatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DirectoryWatch_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void DirectoryWatch::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.DirectoryWatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_agent_) -
      reinterpret_cast<char*>(&file_type_)) + sizeof(remote_agent_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DirectoryWatch::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DirectoryWatch*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string directory = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.DirectoryWatch.directory");
        object = msg->mutable_directory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string extension = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.DirectoryWatch.extension");
        object = msg->mutable_extension();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .v1.model.FileType file_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_file_type(static_cast<::v1::model::FileType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool remote_agent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_remote_agent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DirectoryWatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.DirectoryWatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string directory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.DirectoryWatch.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extension()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extension().data(), static_cast<int>(this->extension().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.DirectoryWatch.extension"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.FileType file_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_file_type(static_cast< ::v1::model::FileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool remote_agent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remote_agent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.DirectoryWatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.DirectoryWatch)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DirectoryWatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.DirectoryWatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.DirectoryWatch.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->directory(), output);
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extension().data(), static_cast<int>(this->extension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.DirectoryWatch.extension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extension(), output);
  }

  // .v1.model.FileType file_type = 3;
  if (this->file_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->file_type(), output);
  }

  // bool remote_agent = 4;
  if (this->remote_agent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->remote_agent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.DirectoryWatch)
}

::google::protobuf::uint8* DirectoryWatch::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.DirectoryWatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.DirectoryWatch.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->directory(), target);
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extension().data(), static_cast<int>(this->extension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.DirectoryWatch.extension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extension(), target);
  }

  // .v1.model.FileType file_type = 3;
  if (this->file_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->file_type(), target);
  }

  // bool remote_agent = 4;
  if (this->remote_agent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->remote_agent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.DirectoryWatch)
  return target;
}

size_t DirectoryWatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.DirectoryWatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extension());
  }

  // .v1.model.FileType file_type = 3;
  if (this->file_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->file_type());
  }

  // bool remote_agent = 4;
  if (this->remote_agent() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectoryWatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.DirectoryWatch)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectoryWatch* source =
      ::google::protobuf::DynamicCastToGenerated<DirectoryWatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.DirectoryWatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.DirectoryWatch)
    MergeFrom(*source);
  }
}

void DirectoryWatch::MergeFrom(const DirectoryWatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.DirectoryWatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  if (from.extension().size() > 0) {

    extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  if (from.file_type() != 0) {
    set_file_type(from.file_type());
  }
  if (from.remote_agent() != 0) {
    set_remote_agent(from.remote_agent());
  }
}

void DirectoryWatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.DirectoryWatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectoryWatch::CopyFrom(const DirectoryWatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.DirectoryWatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectoryWatch::IsInitialized() const {
  return true;
}

void DirectoryWatch::Swap(DirectoryWatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectoryWatch::InternalSwap(DirectoryWatch* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extension_.Swap(&other->extension_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_type_, other->file_type_);
  swap(remote_agent_, other->remote_agent_);
}

::google::protobuf::Metadata DirectoryWatch::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileTail::InitAsDefaultInstance() {
}
class FileTail::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileTail::kFilenameFieldNumber;
const int FileTail::kFileFormatFieldNumber;
const int FileTail::kTimeKeyFieldNumber;
const int FileTail::kTimeFormatFieldNumber;
const int FileTail::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileTail::FileTail()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.FileTail)
}
FileTail::FileTail(const FileTail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  time_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_key().size() > 0) {
    time_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_key_);
  }
  time_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_format().size() > 0) {
    time_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_format_);
  }
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  file_format_ = from.file_format_;
  // @@protoc_insertion_point(copy_constructor:v1.model.FileTail)
}

void FileTail::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_format_ = 0;
}

FileTail::~FileTail() {
  // @@protoc_insertion_point(destructor:v1.model.FileTail)
  SharedDtor();
}

void FileTail::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileTail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileTail& FileTail::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileTail_protos_2fmodel_2fv1_2fconfig_2eproto.base);
  return *internal_default_instance();
}


void FileTail::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.FileTail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_format_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileTail::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileTail*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.FileTail.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .v1.model.FileFormat file_format = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_file_format(static_cast<::v1::model::FileFormat>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string time_key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.FileTail.time_key");
        object = msg->mutable_time_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string time_format = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.FileTail.time_format");
        object = msg->mutable_time_format();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string regex = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.FileTail.regex");
        object = msg->mutable_regex();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileTail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.FileTail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.FileTail.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.FileFormat file_format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_file_format(static_cast< ::v1::model::FileFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_key().data(), static_cast<int>(this->time_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.FileTail.time_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time_format = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_format().data(), static_cast<int>(this->time_format().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.FileTail.time_format"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.FileTail.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.FileTail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.FileTail)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileTail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.FileTail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // .v1.model.FileFormat file_format = 2;
  if (this->file_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->file_format(), output);
  }

  // string time_key = 3;
  if (this->time_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_key().data(), static_cast<int>(this->time_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.time_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->time_key(), output);
  }

  // string time_format = 4;
  if (this->time_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_format().data(), static_cast<int>(this->time_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.time_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->time_format(), output);
  }

  // string regex = 5;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->regex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.FileTail)
}

::google::protobuf::uint8* FileTail::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.FileTail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // .v1.model.FileFormat file_format = 2;
  if (this->file_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->file_format(), target);
  }

  // string time_key = 3;
  if (this->time_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_key().data(), static_cast<int>(this->time_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.time_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->time_key(), target);
  }

  // string time_format = 4;
  if (this->time_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_format().data(), static_cast<int>(this->time_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.time_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->time_format(), target);
  }

  // string regex = 5;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.FileTail.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->regex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.FileTail)
  return target;
}

size_t FileTail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.FileTail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string time_key = 3;
  if (this->time_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_key());
  }

  // string time_format = 4;
  if (this->time_format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_format());
  }

  // string regex = 5;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  // .v1.model.FileFormat file_format = 2;
  if (this->file_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->file_format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileTail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.FileTail)
  GOOGLE_DCHECK_NE(&from, this);
  const FileTail* source =
      ::google::protobuf::DynamicCastToGenerated<FileTail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.FileTail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.FileTail)
    MergeFrom(*source);
  }
}

void FileTail::MergeFrom(const FileTail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.FileTail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.time_key().size() > 0) {

    time_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_key_);
  }
  if (from.time_format().size() > 0) {

    time_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_format_);
  }
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  if (from.file_format() != 0) {
    set_file_format(from.file_format());
  }
}

void FileTail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.FileTail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileTail::CopyFrom(const FileTail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.FileTail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileTail::IsInitialized() const {
  return true;
}

void FileTail::Swap(FileTail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileTail::InternalSwap(FileTail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_key_.Swap(&other->time_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_format_.Swap(&other->time_format_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regex_.Swap(&other->regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_format_, other->file_format_);
}

::google::protobuf::Metadata FileTail::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fconfig_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fconfig_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace v1
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::v1::model::AgentConfiguration* Arena::CreateMaybeMessage< ::v1::model::AgentConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::AgentConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::AgentConfigurationDocument* Arena::CreateMaybeMessage< ::v1::model::AgentConfigurationDocument >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::AgentConfigurationDocument >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::TelemetryConfiguration* Arena::CreateMaybeMessage< ::v1::model::TelemetryConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::TelemetryConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ApplicationConfiguration* Arena::CreateMaybeMessage< ::v1::model::ApplicationConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ApplicationConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ResourcesConfiguration* Arena::CreateMaybeMessage< ::v1::model::ResourcesConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ResourcesConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::DiskConfiguration* Arena::CreateMaybeMessage< ::v1::model::DiskConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::DiskConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ROSConfiguration* Arena::CreateMaybeMessage< ::v1::model::ROSConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ROSConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::StreamConfiguration_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::v1::model::StreamConfiguration_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::StreamConfiguration_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::StreamConfiguration* Arena::CreateMaybeMessage< ::v1::model::StreamConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::StreamConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::DirectoryWatch* Arena::CreateMaybeMessage< ::v1::model::DirectoryWatch >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::DirectoryWatch >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::FileTail* Arena::CreateMaybeMessage< ::v1::model::FileTail >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::FileTail >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
