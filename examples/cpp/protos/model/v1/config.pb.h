// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/config.proto

#ifndef PROTOBUF_INCLUDED_protos_2fmodel_2fv1_2fconfig_2eproto
#define PROTOBUF_INCLUDED_protos_2fmodel_2fv1_2fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "protos/model/v1/ros.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fconfig_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_protos_2fmodel_2fv1_2fconfig_2eproto();
namespace v1 {
namespace model {
class AgentConfiguration;
class AgentConfigurationDefaultTypeInternal;
extern AgentConfigurationDefaultTypeInternal _AgentConfiguration_default_instance_;
class AgentConfigurationDocument;
class AgentConfigurationDocumentDefaultTypeInternal;
extern AgentConfigurationDocumentDefaultTypeInternal _AgentConfigurationDocument_default_instance_;
class AgentConfigurationDocument_TagsEntry_DoNotUse;
class AgentConfigurationDocument_TagsEntry_DoNotUseDefaultTypeInternal;
extern AgentConfigurationDocument_TagsEntry_DoNotUseDefaultTypeInternal _AgentConfigurationDocument_TagsEntry_DoNotUse_default_instance_;
class ApplicationConfiguration;
class ApplicationConfigurationDefaultTypeInternal;
extern ApplicationConfigurationDefaultTypeInternal _ApplicationConfiguration_default_instance_;
class ApplicationConfiguration_ConfigurationMapEntry_DoNotUse;
class ApplicationConfiguration_ConfigurationMapEntry_DoNotUseDefaultTypeInternal;
extern ApplicationConfiguration_ConfigurationMapEntry_DoNotUseDefaultTypeInternal _ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_default_instance_;
class DirectoryWatch;
class DirectoryWatchDefaultTypeInternal;
extern DirectoryWatchDefaultTypeInternal _DirectoryWatch_default_instance_;
class DiskConfiguration;
class DiskConfigurationDefaultTypeInternal;
extern DiskConfigurationDefaultTypeInternal _DiskConfiguration_default_instance_;
class FileTail;
class FileTailDefaultTypeInternal;
extern FileTailDefaultTypeInternal _FileTail_default_instance_;
class ROSConfiguration;
class ROSConfigurationDefaultTypeInternal;
extern ROSConfigurationDefaultTypeInternal _ROSConfiguration_default_instance_;
class ResourcesConfiguration;
class ResourcesConfigurationDefaultTypeInternal;
extern ResourcesConfigurationDefaultTypeInternal _ResourcesConfiguration_default_instance_;
class StreamConfiguration;
class StreamConfigurationDefaultTypeInternal;
extern StreamConfigurationDefaultTypeInternal _StreamConfiguration_default_instance_;
class StreamConfiguration_TagsEntry_DoNotUse;
class StreamConfiguration_TagsEntry_DoNotUseDefaultTypeInternal;
extern StreamConfiguration_TagsEntry_DoNotUseDefaultTypeInternal _StreamConfiguration_TagsEntry_DoNotUse_default_instance_;
class TelemetryConfiguration;
class TelemetryConfigurationDefaultTypeInternal;
extern TelemetryConfigurationDefaultTypeInternal _TelemetryConfiguration_default_instance_;
}  // namespace model
}  // namespace v1
namespace google {
namespace protobuf {
template<> ::v1::model::AgentConfiguration* Arena::CreateMaybeMessage<::v1::model::AgentConfiguration>(Arena*);
template<> ::v1::model::AgentConfigurationDocument* Arena::CreateMaybeMessage<::v1::model::AgentConfigurationDocument>(Arena*);
template<> ::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse* Arena::CreateMaybeMessage<::v1::model::AgentConfigurationDocument_TagsEntry_DoNotUse>(Arena*);
template<> ::v1::model::ApplicationConfiguration* Arena::CreateMaybeMessage<::v1::model::ApplicationConfiguration>(Arena*);
template<> ::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse* Arena::CreateMaybeMessage<::v1::model::ApplicationConfiguration_ConfigurationMapEntry_DoNotUse>(Arena*);
template<> ::v1::model::DirectoryWatch* Arena::CreateMaybeMessage<::v1::model::DirectoryWatch>(Arena*);
template<> ::v1::model::DiskConfiguration* Arena::CreateMaybeMessage<::v1::model::DiskConfiguration>(Arena*);
template<> ::v1::model::FileTail* Arena::CreateMaybeMessage<::v1::model::FileTail>(Arena*);
template<> ::v1::model::ROSConfiguration* Arena::CreateMaybeMessage<::v1::model::ROSConfiguration>(Arena*);
template<> ::v1::model::ResourcesConfiguration* Arena::CreateMaybeMessage<::v1::model::ResourcesConfiguration>(Arena*);
template<> ::v1::model::StreamConfiguration* Arena::CreateMaybeMessage<::v1::model::StreamConfiguration>(Arena*);
template<> ::v1::model::StreamConfiguration_TagsEntry_DoNotUse* Arena::CreateMaybeMessage<::v1::model::StreamConfiguration_TagsEntry_DoNotUse>(Arena*);
template<> ::v1::model::TelemetryConfiguration* Arena::CreateMaybeMessage<::v1::model::TelemetryConfiguration>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace v1 {
namespace model {

enum FileFormat {
  PLAIN_TEXT = 0,
  JSON = 1,
  FileFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FileFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool FileFormat_IsValid(int value);
const FileFormat FileFormat_MIN = PLAIN_TEXT;
const FileFormat FileFormat_MAX = JSON;
const int FileFormat_ARRAYSIZE = FileFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileFormat_descriptor();
inline const ::std::string& FileFormat_Name(FileFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileFormat_descriptor(), value);
}
inline bool FileFormat_Parse(
    const ::std::string& name, FileFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileFormat>(
    FileFormat_descriptor(), name, value);
}
enum FileType {
  FILE = 0,
  IMAGE = 1,
  POINT_CLOUD = 4,
  FileType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FileType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool FileType_IsValid(int value);
const FileType FileType_MIN = FILE;
const FileType FileType_MAX = POINT_CLOUD;
const int FileType_ARRAYSIZE = FileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileType_descriptor();
inline const ::std::string& FileType_Name(FileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileType_descriptor(), value);
}
inline bool FileType_Parse(
    const ::std::string& name, FileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileType>(
    FileType_descriptor(), name, value);
}
// ===================================================================

class AgentConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.AgentConfiguration) */ {
 public:
  AgentConfiguration();
  virtual ~AgentConfiguration();

  AgentConfiguration(const AgentConfiguration& from);

  inline AgentConfiguration& operator=(const AgentConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentConfiguration(AgentConfiguration&& from) noexcept
    : AgentConfiguration() {
    *this = ::std::move(from);
  }

  inline AgentConfiguration& operator=(AgentConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AgentConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentConfiguration* internal_default_instance() {
    return reinterpret_cast<const AgentConfiguration*>(
               &_AgentConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AgentConfiguration* other);
  friend void swap(AgentConfiguration& a, AgentConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentConfiguration* New() const final {
    return CreateMaybeMessage<AgentConfiguration>(nullptr);
  }

  AgentConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentConfiguration& from);
  void MergeFrom(const AgentConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .v1.model.AgentConfigurationDocument document = 3;
  bool has_document() const;
  void clear_document();
  static const int kDocumentFieldNumber = 3;
  const ::v1::model::AgentConfigurationDocument& document() const;
  ::v1::model::AgentConfigurationDocument* release_document();
  ::v1::model::AgentConfigurationDocument* mutable_document();
  void set_allocated_document(::v1::model::AgentConfigurationDocument* document);

  // @@protoc_insertion_point(class_scope:v1.model.AgentConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::v1::model::AgentConfigurationDocument* document_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class AgentConfigurationDocument_TagsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AgentConfigurationDocument_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<AgentConfigurationDocument_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  AgentConfigurationDocument_TagsEntry_DoNotUse();
  AgentConfigurationDocument_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AgentConfigurationDocument_TagsEntry_DoNotUse& other);
  static const AgentConfigurationDocument_TagsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AgentConfigurationDocument_TagsEntry_DoNotUse*>(&_AgentConfigurationDocument_TagsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AgentConfigurationDocument :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.AgentConfigurationDocument) */ {
 public:
  AgentConfigurationDocument();
  virtual ~AgentConfigurationDocument();

  AgentConfigurationDocument(const AgentConfigurationDocument& from);

  inline AgentConfigurationDocument& operator=(const AgentConfigurationDocument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentConfigurationDocument(AgentConfigurationDocument&& from) noexcept
    : AgentConfigurationDocument() {
    *this = ::std::move(from);
  }

  inline AgentConfigurationDocument& operator=(AgentConfigurationDocument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AgentConfigurationDocument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentConfigurationDocument* internal_default_instance() {
    return reinterpret_cast<const AgentConfigurationDocument*>(
               &_AgentConfigurationDocument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AgentConfigurationDocument* other);
  friend void swap(AgentConfigurationDocument& a, AgentConfigurationDocument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentConfigurationDocument* New() const final {
    return CreateMaybeMessage<AgentConfigurationDocument>(nullptr);
  }

  AgentConfigurationDocument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentConfigurationDocument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentConfigurationDocument& from);
  void MergeFrom(const AgentConfigurationDocument& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentConfigurationDocument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> tags = 2;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      tags() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_tags();

  // .v1.model.TelemetryConfiguration telemetry = 3;
  bool has_telemetry() const;
  void clear_telemetry();
  static const int kTelemetryFieldNumber = 3;
  const ::v1::model::TelemetryConfiguration& telemetry() const;
  ::v1::model::TelemetryConfiguration* release_telemetry();
  ::v1::model::TelemetryConfiguration* mutable_telemetry();
  void set_allocated_telemetry(::v1::model::TelemetryConfiguration* telemetry);

  // .v1.model.ResourcesConfiguration resources = 4;
  bool has_resources() const;
  void clear_resources();
  static const int kResourcesFieldNumber = 4;
  const ::v1::model::ResourcesConfiguration& resources() const;
  ::v1::model::ResourcesConfiguration* release_resources();
  ::v1::model::ResourcesConfiguration* mutable_resources();
  void set_allocated_resources(::v1::model::ResourcesConfiguration* resources);

  // .v1.model.ApplicationConfiguration application = 5;
  bool has_application() const;
  void clear_application();
  static const int kApplicationFieldNumber = 5;
  const ::v1::model::ApplicationConfiguration& application() const;
  ::v1::model::ApplicationConfiguration* release_application();
  ::v1::model::ApplicationConfiguration* mutable_application();
  void set_allocated_application(::v1::model::ApplicationConfiguration* application);

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v1.model.AgentConfigurationDocument)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AgentConfigurationDocument_TagsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > tags_;
  ::v1::model::TelemetryConfiguration* telemetry_;
  ::v1::model::ResourcesConfiguration* resources_;
  ::v1::model::ApplicationConfiguration* application_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class TelemetryConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.TelemetryConfiguration) */ {
 public:
  TelemetryConfiguration();
  virtual ~TelemetryConfiguration();

  TelemetryConfiguration(const TelemetryConfiguration& from);

  inline TelemetryConfiguration& operator=(const TelemetryConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelemetryConfiguration(TelemetryConfiguration&& from) noexcept
    : TelemetryConfiguration() {
    *this = ::std::move(from);
  }

  inline TelemetryConfiguration& operator=(TelemetryConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TelemetryConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TelemetryConfiguration* internal_default_instance() {
    return reinterpret_cast<const TelemetryConfiguration*>(
               &_TelemetryConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TelemetryConfiguration* other);
  friend void swap(TelemetryConfiguration& a, TelemetryConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelemetryConfiguration* New() const final {
    return CreateMaybeMessage<TelemetryConfiguration>(nullptr);
  }

  TelemetryConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TelemetryConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TelemetryConfiguration& from);
  void MergeFrom(const TelemetryConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TelemetryConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .v1.model.StreamConfiguration streams = 1;
  int streams_size() const;
  void clear_streams();
  static const int kStreamsFieldNumber = 1;
  ::v1::model::StreamConfiguration* mutable_streams(int index);
  ::google::protobuf::RepeatedPtrField< ::v1::model::StreamConfiguration >*
      mutable_streams();
  const ::v1::model::StreamConfiguration& streams(int index) const;
  ::v1::model::StreamConfiguration* add_streams();
  const ::google::protobuf::RepeatedPtrField< ::v1::model::StreamConfiguration >&
      streams() const;

  // .v1.model.ROSConfiguration ros = 2;
  bool has_ros() const;
  void clear_ros();
  static const int kRosFieldNumber = 2;
  const ::v1::model::ROSConfiguration& ros() const;
  ::v1::model::ROSConfiguration* release_ros();
  ::v1::model::ROSConfiguration* mutable_ros();
  void set_allocated_ros(::v1::model::ROSConfiguration* ros);

  // @@protoc_insertion_point(class_scope:v1.model.TelemetryConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::v1::model::StreamConfiguration > streams_;
  ::v1::model::ROSConfiguration* ros_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class ApplicationConfiguration_ConfigurationMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<ApplicationConfiguration_ConfigurationMapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ApplicationConfiguration_ConfigurationMapEntry_DoNotUse();
  ApplicationConfiguration_ConfigurationMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ApplicationConfiguration_ConfigurationMapEntry_DoNotUse& other);
  static const ApplicationConfiguration_ConfigurationMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ApplicationConfiguration_ConfigurationMapEntry_DoNotUse*>(&_ApplicationConfiguration_ConfigurationMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ApplicationConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.ApplicationConfiguration) */ {
 public:
  ApplicationConfiguration();
  virtual ~ApplicationConfiguration();

  ApplicationConfiguration(const ApplicationConfiguration& from);

  inline ApplicationConfiguration& operator=(const ApplicationConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplicationConfiguration(ApplicationConfiguration&& from) noexcept
    : ApplicationConfiguration() {
    *this = ::std::move(from);
  }

  inline ApplicationConfiguration& operator=(ApplicationConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplicationConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplicationConfiguration* internal_default_instance() {
    return reinterpret_cast<const ApplicationConfiguration*>(
               &_ApplicationConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ApplicationConfiguration* other);
  friend void swap(ApplicationConfiguration& a, ApplicationConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplicationConfiguration* New() const final {
    return CreateMaybeMessage<ApplicationConfiguration>(nullptr);
  }

  ApplicationConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplicationConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplicationConfiguration& from);
  void MergeFrom(const ApplicationConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplicationConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> configuration_map = 1;
  int configuration_map_size() const;
  void clear_configuration_map();
  static const int kConfigurationMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      configuration_map() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_configuration_map();

  // @@protoc_insertion_point(class_scope:v1.model.ApplicationConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ApplicationConfiguration_ConfigurationMapEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > configuration_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class ResourcesConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.ResourcesConfiguration) */ {
 public:
  ResourcesConfiguration();
  virtual ~ResourcesConfiguration();

  ResourcesConfiguration(const ResourcesConfiguration& from);

  inline ResourcesConfiguration& operator=(const ResourcesConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourcesConfiguration(ResourcesConfiguration&& from) noexcept
    : ResourcesConfiguration() {
    *this = ::std::move(from);
  }

  inline ResourcesConfiguration& operator=(ResourcesConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ResourcesConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourcesConfiguration* internal_default_instance() {
    return reinterpret_cast<const ResourcesConfiguration*>(
               &_ResourcesConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ResourcesConfiguration* other);
  friend void swap(ResourcesConfiguration& a, ResourcesConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourcesConfiguration* New() const final {
    return CreateMaybeMessage<ResourcesConfiguration>(nullptr);
  }

  ResourcesConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourcesConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourcesConfiguration& from);
  void MergeFrom(const ResourcesConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourcesConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .v1.model.DiskConfiguration disk = 1;
  bool has_disk() const;
  void clear_disk();
  static const int kDiskFieldNumber = 1;
  const ::v1::model::DiskConfiguration& disk() const;
  ::v1::model::DiskConfiguration* release_disk();
  ::v1::model::DiskConfiguration* mutable_disk();
  void set_allocated_disk(::v1::model::DiskConfiguration* disk);

  // @@protoc_insertion_point(class_scope:v1.model.ResourcesConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::v1::model::DiskConfiguration* disk_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class DiskConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.DiskConfiguration) */ {
 public:
  DiskConfiguration();
  virtual ~DiskConfiguration();

  DiskConfiguration(const DiskConfiguration& from);

  inline DiskConfiguration& operator=(const DiskConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiskConfiguration(DiskConfiguration&& from) noexcept
    : DiskConfiguration() {
    *this = ::std::move(from);
  }

  inline DiskConfiguration& operator=(DiskConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DiskConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiskConfiguration* internal_default_instance() {
    return reinterpret_cast<const DiskConfiguration*>(
               &_DiskConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DiskConfiguration* other);
  friend void swap(DiskConfiguration& a, DiskConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiskConfiguration* New() const final {
    return CreateMaybeMessage<DiskConfiguration>(nullptr);
  }

  DiskConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiskConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiskConfiguration& from);
  void MergeFrom(const DiskConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiskConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 buffer_size = 1;
  void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 1;
  ::google::protobuf::int64 buffer_size() const;
  void set_buffer_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.model.DiskConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 buffer_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class ROSConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.ROSConfiguration) */ {
 public:
  ROSConfiguration();
  virtual ~ROSConfiguration();

  ROSConfiguration(const ROSConfiguration& from);

  inline ROSConfiguration& operator=(const ROSConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ROSConfiguration(ROSConfiguration&& from) noexcept
    : ROSConfiguration() {
    *this = ::std::move(from);
  }

  inline ROSConfiguration& operator=(ROSConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ROSConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ROSConfiguration* internal_default_instance() {
    return reinterpret_cast<const ROSConfiguration*>(
               &_ROSConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ROSConfiguration* other);
  friend void swap(ROSConfiguration& a, ROSConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ROSConfiguration* New() const final {
    return CreateMaybeMessage<ROSConfiguration>(nullptr);
  }

  ROSConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ROSConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ROSConfiguration& from);
  void MergeFrom(const ROSConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROSConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string world_reference_frame_id = 1;
  void clear_world_reference_frame_id();
  static const int kWorldReferenceFrameIdFieldNumber = 1;
  const ::std::string& world_reference_frame_id() const;
  void set_world_reference_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_world_reference_frame_id(::std::string&& value);
  #endif
  void set_world_reference_frame_id(const char* value);
  void set_world_reference_frame_id(const char* value, size_t size);
  ::std::string* mutable_world_reference_frame_id();
  ::std::string* release_world_reference_frame_id();
  void set_allocated_world_reference_frame_id(::std::string* world_reference_frame_id);

  // @@protoc_insertion_point(class_scope:v1.model.ROSConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr world_reference_frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class StreamConfiguration_TagsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StreamConfiguration_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<StreamConfiguration_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StreamConfiguration_TagsEntry_DoNotUse();
  StreamConfiguration_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StreamConfiguration_TagsEntry_DoNotUse& other);
  static const StreamConfiguration_TagsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StreamConfiguration_TagsEntry_DoNotUse*>(&_StreamConfiguration_TagsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StreamConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.StreamConfiguration) */ {
 public:
  StreamConfiguration();
  virtual ~StreamConfiguration();

  StreamConfiguration(const StreamConfiguration& from);

  inline StreamConfiguration& operator=(const StreamConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamConfiguration(StreamConfiguration&& from) noexcept
    : StreamConfiguration() {
    *this = ::std::move(from);
  }

  inline StreamConfiguration& operator=(StreamConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StreamConfiguration& default_instance();

  enum ConfigurationCase {
    kRosTopic = 3,
    kRosLocalization = 4,
    kDirectoryWatch = 5,
    kFileTail = 6,
    CONFIGURATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamConfiguration* internal_default_instance() {
    return reinterpret_cast<const StreamConfiguration*>(
               &_StreamConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(StreamConfiguration* other);
  friend void swap(StreamConfiguration& a, StreamConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamConfiguration* New() const final {
    return CreateMaybeMessage<StreamConfiguration>(nullptr);
  }

  StreamConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StreamConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StreamConfiguration& from);
  void MergeFrom(const StreamConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> tags = 2;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      tags() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_tags();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .v1.model.ROSTopic ros_topic = 3;
  bool has_ros_topic() const;
  void clear_ros_topic();
  static const int kRosTopicFieldNumber = 3;
  const ::v1::model::ROSTopic& ros_topic() const;
  ::v1::model::ROSTopic* release_ros_topic();
  ::v1::model::ROSTopic* mutable_ros_topic();
  void set_allocated_ros_topic(::v1::model::ROSTopic* ros_topic);

  // .v1.model.ROSLocalization ros_localization = 4;
  bool has_ros_localization() const;
  void clear_ros_localization();
  static const int kRosLocalizationFieldNumber = 4;
  const ::v1::model::ROSLocalization& ros_localization() const;
  ::v1::model::ROSLocalization* release_ros_localization();
  ::v1::model::ROSLocalization* mutable_ros_localization();
  void set_allocated_ros_localization(::v1::model::ROSLocalization* ros_localization);

  // .v1.model.DirectoryWatch directory_watch = 5;
  bool has_directory_watch() const;
  void clear_directory_watch();
  static const int kDirectoryWatchFieldNumber = 5;
  const ::v1::model::DirectoryWatch& directory_watch() const;
  ::v1::model::DirectoryWatch* release_directory_watch();
  ::v1::model::DirectoryWatch* mutable_directory_watch();
  void set_allocated_directory_watch(::v1::model::DirectoryWatch* directory_watch);

  // .v1.model.FileTail file_tail = 6;
  bool has_file_tail() const;
  void clear_file_tail();
  static const int kFileTailFieldNumber = 6;
  const ::v1::model::FileTail& file_tail() const;
  ::v1::model::FileTail* release_file_tail();
  ::v1::model::FileTail* mutable_file_tail();
  void set_allocated_file_tail(::v1::model::FileTail* file_tail);

  void clear_configuration();
  ConfigurationCase configuration_case() const;
  // @@protoc_insertion_point(class_scope:v1.model.StreamConfiguration)
 private:
  class HasBitSetters;
  void set_has_ros_topic();
  void set_has_ros_localization();
  void set_has_directory_watch();
  void set_has_file_tail();

  inline bool has_configuration() const;
  inline void clear_has_configuration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StreamConfiguration_TagsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > tags_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union ConfigurationUnion {
    ConfigurationUnion() {}
    ::v1::model::ROSTopic* ros_topic_;
    ::v1::model::ROSLocalization* ros_localization_;
    ::v1::model::DirectoryWatch* directory_watch_;
    ::v1::model::FileTail* file_tail_;
  } configuration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class DirectoryWatch :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.DirectoryWatch) */ {
 public:
  DirectoryWatch();
  virtual ~DirectoryWatch();

  DirectoryWatch(const DirectoryWatch& from);

  inline DirectoryWatch& operator=(const DirectoryWatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DirectoryWatch(DirectoryWatch&& from) noexcept
    : DirectoryWatch() {
    *this = ::std::move(from);
  }

  inline DirectoryWatch& operator=(DirectoryWatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DirectoryWatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DirectoryWatch* internal_default_instance() {
    return reinterpret_cast<const DirectoryWatch*>(
               &_DirectoryWatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DirectoryWatch* other);
  friend void swap(DirectoryWatch& a, DirectoryWatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DirectoryWatch* New() const final {
    return CreateMaybeMessage<DirectoryWatch>(nullptr);
  }

  DirectoryWatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DirectoryWatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DirectoryWatch& from);
  void MergeFrom(const DirectoryWatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DirectoryWatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string directory = 1;
  void clear_directory();
  static const int kDirectoryFieldNumber = 1;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // string extension = 2;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  const ::std::string& extension() const;
  void set_extension(const ::std::string& value);
  #if LANG_CXX11
  void set_extension(::std::string&& value);
  #endif
  void set_extension(const char* value);
  void set_extension(const char* value, size_t size);
  ::std::string* mutable_extension();
  ::std::string* release_extension();
  void set_allocated_extension(::std::string* extension);

  // .v1.model.FileType file_type = 3;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 3;
  ::v1::model::FileType file_type() const;
  void set_file_type(::v1::model::FileType value);

  // bool remote_agent = 4;
  void clear_remote_agent();
  static const int kRemoteAgentFieldNumber = 4;
  bool remote_agent() const;
  void set_remote_agent(bool value);

  // @@protoc_insertion_point(class_scope:v1.model.DirectoryWatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  ::google::protobuf::internal::ArenaStringPtr extension_;
  int file_type_;
  bool remote_agent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// -------------------------------------------------------------------

class FileTail :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.model.FileTail) */ {
 public:
  FileTail();
  virtual ~FileTail();

  FileTail(const FileTail& from);

  inline FileTail& operator=(const FileTail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileTail(FileTail&& from) noexcept
    : FileTail() {
    *this = ::std::move(from);
  }

  inline FileTail& operator=(FileTail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FileTail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileTail* internal_default_instance() {
    return reinterpret_cast<const FileTail*>(
               &_FileTail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(FileTail* other);
  friend void swap(FileTail& a, FileTail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileTail* New() const final {
    return CreateMaybeMessage<FileTail>(nullptr);
  }

  FileTail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileTail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileTail& from);
  void MergeFrom(const FileTail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileTail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string time_key = 3;
  void clear_time_key();
  static const int kTimeKeyFieldNumber = 3;
  const ::std::string& time_key() const;
  void set_time_key(const ::std::string& value);
  #if LANG_CXX11
  void set_time_key(::std::string&& value);
  #endif
  void set_time_key(const char* value);
  void set_time_key(const char* value, size_t size);
  ::std::string* mutable_time_key();
  ::std::string* release_time_key();
  void set_allocated_time_key(::std::string* time_key);

  // string time_format = 4;
  void clear_time_format();
  static const int kTimeFormatFieldNumber = 4;
  const ::std::string& time_format() const;
  void set_time_format(const ::std::string& value);
  #if LANG_CXX11
  void set_time_format(::std::string&& value);
  #endif
  void set_time_format(const char* value);
  void set_time_format(const char* value, size_t size);
  ::std::string* mutable_time_format();
  ::std::string* release_time_format();
  void set_allocated_time_format(::std::string* time_format);

  // string regex = 5;
  void clear_regex();
  static const int kRegexFieldNumber = 5;
  const ::std::string& regex() const;
  void set_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_regex(::std::string&& value);
  #endif
  void set_regex(const char* value);
  void set_regex(const char* value, size_t size);
  ::std::string* mutable_regex();
  ::std::string* release_regex();
  void set_allocated_regex(::std::string* regex);

  // .v1.model.FileFormat file_format = 2;
  void clear_file_format();
  static const int kFileFormatFieldNumber = 2;
  ::v1::model::FileFormat file_format() const;
  void set_file_format(::v1::model::FileFormat value);

  // @@protoc_insertion_point(class_scope:v1.model.FileTail)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr time_key_;
  ::google::protobuf::internal::ArenaStringPtr time_format_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
  int file_format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fmodel_2fv1_2fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentConfiguration

// string id = 1;
inline void AgentConfiguration::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentConfiguration::id() const {
  // @@protoc_insertion_point(field_get:v1.model.AgentConfiguration.id)
  return id_.GetNoArena();
}
inline void AgentConfiguration::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.AgentConfiguration.id)
}
#if LANG_CXX11
inline void AgentConfiguration::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.AgentConfiguration.id)
}
#endif
inline void AgentConfiguration::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.AgentConfiguration.id)
}
inline void AgentConfiguration::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.AgentConfiguration.id)
}
inline ::std::string* AgentConfiguration::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfiguration.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentConfiguration::release_id() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfiguration.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentConfiguration::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfiguration.id)
}

// string name = 2;
inline void AgentConfiguration::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentConfiguration::name() const {
  // @@protoc_insertion_point(field_get:v1.model.AgentConfiguration.name)
  return name_.GetNoArena();
}
inline void AgentConfiguration::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.AgentConfiguration.name)
}
#if LANG_CXX11
inline void AgentConfiguration::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.AgentConfiguration.name)
}
#endif
inline void AgentConfiguration::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.AgentConfiguration.name)
}
inline void AgentConfiguration::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.AgentConfiguration.name)
}
inline ::std::string* AgentConfiguration::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfiguration.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentConfiguration::release_name() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfiguration.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentConfiguration::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfiguration.name)
}

// .v1.model.AgentConfigurationDocument document = 3;
inline bool AgentConfiguration::has_document() const {
  return this != internal_default_instance() && document_ != nullptr;
}
inline void AgentConfiguration::clear_document() {
  if (GetArenaNoVirtual() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
}
inline const ::v1::model::AgentConfigurationDocument& AgentConfiguration::document() const {
  const ::v1::model::AgentConfigurationDocument* p = document_;
  // @@protoc_insertion_point(field_get:v1.model.AgentConfiguration.document)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::AgentConfigurationDocument*>(
      &::v1::model::_AgentConfigurationDocument_default_instance_);
}
inline ::v1::model::AgentConfigurationDocument* AgentConfiguration::release_document() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfiguration.document)
  
  ::v1::model::AgentConfigurationDocument* temp = document_;
  document_ = nullptr;
  return temp;
}
inline ::v1::model::AgentConfigurationDocument* AgentConfiguration::mutable_document() {
  
  if (document_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::AgentConfigurationDocument>(GetArenaNoVirtual());
    document_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfiguration.document)
  return document_;
}
inline void AgentConfiguration::set_allocated_document(::v1::model::AgentConfigurationDocument* document) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete document_;
  }
  if (document) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      document = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document, submessage_arena);
    }
    
  } else {
    
  }
  document_ = document;
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfiguration.document)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AgentConfigurationDocument

// int32 version = 1;
inline void AgentConfigurationDocument::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 AgentConfigurationDocument::version() const {
  // @@protoc_insertion_point(field_get:v1.model.AgentConfigurationDocument.version)
  return version_;
}
inline void AgentConfigurationDocument::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:v1.model.AgentConfigurationDocument.version)
}

// map<string, string> tags = 2;
inline int AgentConfigurationDocument::tags_size() const {
  return tags_.size();
}
inline void AgentConfigurationDocument::clear_tags() {
  tags_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AgentConfigurationDocument::tags() const {
  // @@protoc_insertion_point(field_map:v1.model.AgentConfigurationDocument.tags)
  return tags_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AgentConfigurationDocument::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_map:v1.model.AgentConfigurationDocument.tags)
  return tags_.MutableMap();
}

// .v1.model.TelemetryConfiguration telemetry = 3;
inline bool AgentConfigurationDocument::has_telemetry() const {
  return this != internal_default_instance() && telemetry_ != nullptr;
}
inline void AgentConfigurationDocument::clear_telemetry() {
  if (GetArenaNoVirtual() == nullptr && telemetry_ != nullptr) {
    delete telemetry_;
  }
  telemetry_ = nullptr;
}
inline const ::v1::model::TelemetryConfiguration& AgentConfigurationDocument::telemetry() const {
  const ::v1::model::TelemetryConfiguration* p = telemetry_;
  // @@protoc_insertion_point(field_get:v1.model.AgentConfigurationDocument.telemetry)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::TelemetryConfiguration*>(
      &::v1::model::_TelemetryConfiguration_default_instance_);
}
inline ::v1::model::TelemetryConfiguration* AgentConfigurationDocument::release_telemetry() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfigurationDocument.telemetry)
  
  ::v1::model::TelemetryConfiguration* temp = telemetry_;
  telemetry_ = nullptr;
  return temp;
}
inline ::v1::model::TelemetryConfiguration* AgentConfigurationDocument::mutable_telemetry() {
  
  if (telemetry_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::TelemetryConfiguration>(GetArenaNoVirtual());
    telemetry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfigurationDocument.telemetry)
  return telemetry_;
}
inline void AgentConfigurationDocument::set_allocated_telemetry(::v1::model::TelemetryConfiguration* telemetry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete telemetry_;
  }
  if (telemetry) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      telemetry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, telemetry, submessage_arena);
    }
    
  } else {
    
  }
  telemetry_ = telemetry;
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfigurationDocument.telemetry)
}

// .v1.model.ResourcesConfiguration resources = 4;
inline bool AgentConfigurationDocument::has_resources() const {
  return this != internal_default_instance() && resources_ != nullptr;
}
inline void AgentConfigurationDocument::clear_resources() {
  if (GetArenaNoVirtual() == nullptr && resources_ != nullptr) {
    delete resources_;
  }
  resources_ = nullptr;
}
inline const ::v1::model::ResourcesConfiguration& AgentConfigurationDocument::resources() const {
  const ::v1::model::ResourcesConfiguration* p = resources_;
  // @@protoc_insertion_point(field_get:v1.model.AgentConfigurationDocument.resources)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::ResourcesConfiguration*>(
      &::v1::model::_ResourcesConfiguration_default_instance_);
}
inline ::v1::model::ResourcesConfiguration* AgentConfigurationDocument::release_resources() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfigurationDocument.resources)
  
  ::v1::model::ResourcesConfiguration* temp = resources_;
  resources_ = nullptr;
  return temp;
}
inline ::v1::model::ResourcesConfiguration* AgentConfigurationDocument::mutable_resources() {
  
  if (resources_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::ResourcesConfiguration>(GetArenaNoVirtual());
    resources_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfigurationDocument.resources)
  return resources_;
}
inline void AgentConfigurationDocument::set_allocated_resources(::v1::model::ResourcesConfiguration* resources) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete resources_;
  }
  if (resources) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resources = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resources, submessage_arena);
    }
    
  } else {
    
  }
  resources_ = resources;
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfigurationDocument.resources)
}

// .v1.model.ApplicationConfiguration application = 5;
inline bool AgentConfigurationDocument::has_application() const {
  return this != internal_default_instance() && application_ != nullptr;
}
inline void AgentConfigurationDocument::clear_application() {
  if (GetArenaNoVirtual() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
}
inline const ::v1::model::ApplicationConfiguration& AgentConfigurationDocument::application() const {
  const ::v1::model::ApplicationConfiguration* p = application_;
  // @@protoc_insertion_point(field_get:v1.model.AgentConfigurationDocument.application)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::ApplicationConfiguration*>(
      &::v1::model::_ApplicationConfiguration_default_instance_);
}
inline ::v1::model::ApplicationConfiguration* AgentConfigurationDocument::release_application() {
  // @@protoc_insertion_point(field_release:v1.model.AgentConfigurationDocument.application)
  
  ::v1::model::ApplicationConfiguration* temp = application_;
  application_ = nullptr;
  return temp;
}
inline ::v1::model::ApplicationConfiguration* AgentConfigurationDocument::mutable_application() {
  
  if (application_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::ApplicationConfiguration>(GetArenaNoVirtual());
    application_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.AgentConfigurationDocument.application)
  return application_;
}
inline void AgentConfigurationDocument::set_allocated_application(::v1::model::ApplicationConfiguration* application) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete application_;
  }
  if (application) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      application = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, application, submessage_arena);
    }
    
  } else {
    
  }
  application_ = application;
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentConfigurationDocument.application)
}

// -------------------------------------------------------------------

// TelemetryConfiguration

// repeated .v1.model.StreamConfiguration streams = 1;
inline int TelemetryConfiguration::streams_size() const {
  return streams_.size();
}
inline void TelemetryConfiguration::clear_streams() {
  streams_.Clear();
}
inline ::v1::model::StreamConfiguration* TelemetryConfiguration::mutable_streams(int index) {
  // @@protoc_insertion_point(field_mutable:v1.model.TelemetryConfiguration.streams)
  return streams_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::v1::model::StreamConfiguration >*
TelemetryConfiguration::mutable_streams() {
  // @@protoc_insertion_point(field_mutable_list:v1.model.TelemetryConfiguration.streams)
  return &streams_;
}
inline const ::v1::model::StreamConfiguration& TelemetryConfiguration::streams(int index) const {
  // @@protoc_insertion_point(field_get:v1.model.TelemetryConfiguration.streams)
  return streams_.Get(index);
}
inline ::v1::model::StreamConfiguration* TelemetryConfiguration::add_streams() {
  // @@protoc_insertion_point(field_add:v1.model.TelemetryConfiguration.streams)
  return streams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::v1::model::StreamConfiguration >&
TelemetryConfiguration::streams() const {
  // @@protoc_insertion_point(field_list:v1.model.TelemetryConfiguration.streams)
  return streams_;
}

// .v1.model.ROSConfiguration ros = 2;
inline bool TelemetryConfiguration::has_ros() const {
  return this != internal_default_instance() && ros_ != nullptr;
}
inline void TelemetryConfiguration::clear_ros() {
  if (GetArenaNoVirtual() == nullptr && ros_ != nullptr) {
    delete ros_;
  }
  ros_ = nullptr;
}
inline const ::v1::model::ROSConfiguration& TelemetryConfiguration::ros() const {
  const ::v1::model::ROSConfiguration* p = ros_;
  // @@protoc_insertion_point(field_get:v1.model.TelemetryConfiguration.ros)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::ROSConfiguration*>(
      &::v1::model::_ROSConfiguration_default_instance_);
}
inline ::v1::model::ROSConfiguration* TelemetryConfiguration::release_ros() {
  // @@protoc_insertion_point(field_release:v1.model.TelemetryConfiguration.ros)
  
  ::v1::model::ROSConfiguration* temp = ros_;
  ros_ = nullptr;
  return temp;
}
inline ::v1::model::ROSConfiguration* TelemetryConfiguration::mutable_ros() {
  
  if (ros_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::ROSConfiguration>(GetArenaNoVirtual());
    ros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.TelemetryConfiguration.ros)
  return ros_;
}
inline void TelemetryConfiguration::set_allocated_ros(::v1::model::ROSConfiguration* ros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ros_;
  }
  if (ros) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ros, submessage_arena);
    }
    
  } else {
    
  }
  ros_ = ros;
  // @@protoc_insertion_point(field_set_allocated:v1.model.TelemetryConfiguration.ros)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ApplicationConfiguration

// map<string, string> configuration_map = 1;
inline int ApplicationConfiguration::configuration_map_size() const {
  return configuration_map_.size();
}
inline void ApplicationConfiguration::clear_configuration_map() {
  configuration_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ApplicationConfiguration::configuration_map() const {
  // @@protoc_insertion_point(field_map:v1.model.ApplicationConfiguration.configuration_map)
  return configuration_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ApplicationConfiguration::mutable_configuration_map() {
  // @@protoc_insertion_point(field_mutable_map:v1.model.ApplicationConfiguration.configuration_map)
  return configuration_map_.MutableMap();
}

// -------------------------------------------------------------------

// ResourcesConfiguration

// .v1.model.DiskConfiguration disk = 1;
inline bool ResourcesConfiguration::has_disk() const {
  return this != internal_default_instance() && disk_ != nullptr;
}
inline void ResourcesConfiguration::clear_disk() {
  if (GetArenaNoVirtual() == nullptr && disk_ != nullptr) {
    delete disk_;
  }
  disk_ = nullptr;
}
inline const ::v1::model::DiskConfiguration& ResourcesConfiguration::disk() const {
  const ::v1::model::DiskConfiguration* p = disk_;
  // @@protoc_insertion_point(field_get:v1.model.ResourcesConfiguration.disk)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::model::DiskConfiguration*>(
      &::v1::model::_DiskConfiguration_default_instance_);
}
inline ::v1::model::DiskConfiguration* ResourcesConfiguration::release_disk() {
  // @@protoc_insertion_point(field_release:v1.model.ResourcesConfiguration.disk)
  
  ::v1::model::DiskConfiguration* temp = disk_;
  disk_ = nullptr;
  return temp;
}
inline ::v1::model::DiskConfiguration* ResourcesConfiguration::mutable_disk() {
  
  if (disk_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::model::DiskConfiguration>(GetArenaNoVirtual());
    disk_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.model.ResourcesConfiguration.disk)
  return disk_;
}
inline void ResourcesConfiguration::set_allocated_disk(::v1::model::DiskConfiguration* disk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete disk_;
  }
  if (disk) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      disk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, disk, submessage_arena);
    }
    
  } else {
    
  }
  disk_ = disk;
  // @@protoc_insertion_point(field_set_allocated:v1.model.ResourcesConfiguration.disk)
}

// -------------------------------------------------------------------

// DiskConfiguration

// int64 buffer_size = 1;
inline void DiskConfiguration::clear_buffer_size() {
  buffer_size_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 DiskConfiguration::buffer_size() const {
  // @@protoc_insertion_point(field_get:v1.model.DiskConfiguration.buffer_size)
  return buffer_size_;
}
inline void DiskConfiguration::set_buffer_size(::google::protobuf::int64 value) {
  
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:v1.model.DiskConfiguration.buffer_size)
}

// -------------------------------------------------------------------

// ROSConfiguration

// string world_reference_frame_id = 1;
inline void ROSConfiguration::clear_world_reference_frame_id() {
  world_reference_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ROSConfiguration::world_reference_frame_id() const {
  // @@protoc_insertion_point(field_get:v1.model.ROSConfiguration.world_reference_frame_id)
  return world_reference_frame_id_.GetNoArena();
}
inline void ROSConfiguration::set_world_reference_frame_id(const ::std::string& value) {
  
  world_reference_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.ROSConfiguration.world_reference_frame_id)
}
#if LANG_CXX11
inline void ROSConfiguration::set_world_reference_frame_id(::std::string&& value) {
  
  world_reference_frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.ROSConfiguration.world_reference_frame_id)
}
#endif
inline void ROSConfiguration::set_world_reference_frame_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  world_reference_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.ROSConfiguration.world_reference_frame_id)
}
inline void ROSConfiguration::set_world_reference_frame_id(const char* value, size_t size) {
  
  world_reference_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.ROSConfiguration.world_reference_frame_id)
}
inline ::std::string* ROSConfiguration::mutable_world_reference_frame_id() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.ROSConfiguration.world_reference_frame_id)
  return world_reference_frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ROSConfiguration::release_world_reference_frame_id() {
  // @@protoc_insertion_point(field_release:v1.model.ROSConfiguration.world_reference_frame_id)
  
  return world_reference_frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ROSConfiguration::set_allocated_world_reference_frame_id(::std::string* world_reference_frame_id) {
  if (world_reference_frame_id != nullptr) {
    
  } else {
    
  }
  world_reference_frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), world_reference_frame_id);
  // @@protoc_insertion_point(field_set_allocated:v1.model.ROSConfiguration.world_reference_frame_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StreamConfiguration

// string name = 1;
inline void StreamConfiguration::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StreamConfiguration::name() const {
  // @@protoc_insertion_point(field_get:v1.model.StreamConfiguration.name)
  return name_.GetNoArena();
}
inline void StreamConfiguration::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.StreamConfiguration.name)
}
#if LANG_CXX11
inline void StreamConfiguration::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.StreamConfiguration.name)
}
#endif
inline void StreamConfiguration::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.StreamConfiguration.name)
}
inline void StreamConfiguration::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.StreamConfiguration.name)
}
inline ::std::string* StreamConfiguration::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.StreamConfiguration.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StreamConfiguration::release_name() {
  // @@protoc_insertion_point(field_release:v1.model.StreamConfiguration.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamConfiguration::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:v1.model.StreamConfiguration.name)
}

// map<string, string> tags = 2;
inline int StreamConfiguration::tags_size() const {
  return tags_.size();
}
inline void StreamConfiguration::clear_tags() {
  tags_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StreamConfiguration::tags() const {
  // @@protoc_insertion_point(field_map:v1.model.StreamConfiguration.tags)
  return tags_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StreamConfiguration::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_map:v1.model.StreamConfiguration.tags)
  return tags_.MutableMap();
}

// .v1.model.ROSTopic ros_topic = 3;
inline bool StreamConfiguration::has_ros_topic() const {
  return configuration_case() == kRosTopic;
}
inline void StreamConfiguration::set_has_ros_topic() {
  _oneof_case_[0] = kRosTopic;
}
inline ::v1::model::ROSTopic* StreamConfiguration::release_ros_topic() {
  // @@protoc_insertion_point(field_release:v1.model.StreamConfiguration.ros_topic)
  if (has_ros_topic()) {
    clear_has_configuration();
      ::v1::model::ROSTopic* temp = configuration_.ros_topic_;
    configuration_.ros_topic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::model::ROSTopic& StreamConfiguration::ros_topic() const {
  // @@protoc_insertion_point(field_get:v1.model.StreamConfiguration.ros_topic)
  return has_ros_topic()
      ? *configuration_.ros_topic_
      : *reinterpret_cast< ::v1::model::ROSTopic*>(&::v1::model::_ROSTopic_default_instance_);
}
inline ::v1::model::ROSTopic* StreamConfiguration::mutable_ros_topic() {
  if (!has_ros_topic()) {
    clear_configuration();
    set_has_ros_topic();
    configuration_.ros_topic_ = CreateMaybeMessage< ::v1::model::ROSTopic >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.model.StreamConfiguration.ros_topic)
  return configuration_.ros_topic_;
}

// .v1.model.ROSLocalization ros_localization = 4;
inline bool StreamConfiguration::has_ros_localization() const {
  return configuration_case() == kRosLocalization;
}
inline void StreamConfiguration::set_has_ros_localization() {
  _oneof_case_[0] = kRosLocalization;
}
inline ::v1::model::ROSLocalization* StreamConfiguration::release_ros_localization() {
  // @@protoc_insertion_point(field_release:v1.model.StreamConfiguration.ros_localization)
  if (has_ros_localization()) {
    clear_has_configuration();
      ::v1::model::ROSLocalization* temp = configuration_.ros_localization_;
    configuration_.ros_localization_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::model::ROSLocalization& StreamConfiguration::ros_localization() const {
  // @@protoc_insertion_point(field_get:v1.model.StreamConfiguration.ros_localization)
  return has_ros_localization()
      ? *configuration_.ros_localization_
      : *reinterpret_cast< ::v1::model::ROSLocalization*>(&::v1::model::_ROSLocalization_default_instance_);
}
inline ::v1::model::ROSLocalization* StreamConfiguration::mutable_ros_localization() {
  if (!has_ros_localization()) {
    clear_configuration();
    set_has_ros_localization();
    configuration_.ros_localization_ = CreateMaybeMessage< ::v1::model::ROSLocalization >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.model.StreamConfiguration.ros_localization)
  return configuration_.ros_localization_;
}

// .v1.model.DirectoryWatch directory_watch = 5;
inline bool StreamConfiguration::has_directory_watch() const {
  return configuration_case() == kDirectoryWatch;
}
inline void StreamConfiguration::set_has_directory_watch() {
  _oneof_case_[0] = kDirectoryWatch;
}
inline void StreamConfiguration::clear_directory_watch() {
  if (has_directory_watch()) {
    delete configuration_.directory_watch_;
    clear_has_configuration();
  }
}
inline ::v1::model::DirectoryWatch* StreamConfiguration::release_directory_watch() {
  // @@protoc_insertion_point(field_release:v1.model.StreamConfiguration.directory_watch)
  if (has_directory_watch()) {
    clear_has_configuration();
      ::v1::model::DirectoryWatch* temp = configuration_.directory_watch_;
    configuration_.directory_watch_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::model::DirectoryWatch& StreamConfiguration::directory_watch() const {
  // @@protoc_insertion_point(field_get:v1.model.StreamConfiguration.directory_watch)
  return has_directory_watch()
      ? *configuration_.directory_watch_
      : *reinterpret_cast< ::v1::model::DirectoryWatch*>(&::v1::model::_DirectoryWatch_default_instance_);
}
inline ::v1::model::DirectoryWatch* StreamConfiguration::mutable_directory_watch() {
  if (!has_directory_watch()) {
    clear_configuration();
    set_has_directory_watch();
    configuration_.directory_watch_ = CreateMaybeMessage< ::v1::model::DirectoryWatch >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.model.StreamConfiguration.directory_watch)
  return configuration_.directory_watch_;
}

// .v1.model.FileTail file_tail = 6;
inline bool StreamConfiguration::has_file_tail() const {
  return configuration_case() == kFileTail;
}
inline void StreamConfiguration::set_has_file_tail() {
  _oneof_case_[0] = kFileTail;
}
inline void StreamConfiguration::clear_file_tail() {
  if (has_file_tail()) {
    delete configuration_.file_tail_;
    clear_has_configuration();
  }
}
inline ::v1::model::FileTail* StreamConfiguration::release_file_tail() {
  // @@protoc_insertion_point(field_release:v1.model.StreamConfiguration.file_tail)
  if (has_file_tail()) {
    clear_has_configuration();
      ::v1::model::FileTail* temp = configuration_.file_tail_;
    configuration_.file_tail_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::model::FileTail& StreamConfiguration::file_tail() const {
  // @@protoc_insertion_point(field_get:v1.model.StreamConfiguration.file_tail)
  return has_file_tail()
      ? *configuration_.file_tail_
      : *reinterpret_cast< ::v1::model::FileTail*>(&::v1::model::_FileTail_default_instance_);
}
inline ::v1::model::FileTail* StreamConfiguration::mutable_file_tail() {
  if (!has_file_tail()) {
    clear_configuration();
    set_has_file_tail();
    configuration_.file_tail_ = CreateMaybeMessage< ::v1::model::FileTail >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.model.StreamConfiguration.file_tail)
  return configuration_.file_tail_;
}

inline bool StreamConfiguration::has_configuration() const {
  return configuration_case() != CONFIGURATION_NOT_SET;
}
inline void StreamConfiguration::clear_has_configuration() {
  _oneof_case_[0] = CONFIGURATION_NOT_SET;
}
inline StreamConfiguration::ConfigurationCase StreamConfiguration::configuration_case() const {
  return StreamConfiguration::ConfigurationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DirectoryWatch

// string directory = 1;
inline void DirectoryWatch::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DirectoryWatch::directory() const {
  // @@protoc_insertion_point(field_get:v1.model.DirectoryWatch.directory)
  return directory_.GetNoArena();
}
inline void DirectoryWatch::set_directory(const ::std::string& value) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.DirectoryWatch.directory)
}
#if LANG_CXX11
inline void DirectoryWatch::set_directory(::std::string&& value) {
  
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.DirectoryWatch.directory)
}
#endif
inline void DirectoryWatch::set_directory(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.DirectoryWatch.directory)
}
inline void DirectoryWatch::set_directory(const char* value, size_t size) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.DirectoryWatch.directory)
}
inline ::std::string* DirectoryWatch::mutable_directory() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.DirectoryWatch.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DirectoryWatch::release_directory() {
  // @@protoc_insertion_point(field_release:v1.model.DirectoryWatch.directory)
  
  return directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DirectoryWatch::set_allocated_directory(::std::string* directory) {
  if (directory != nullptr) {
    
  } else {
    
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:v1.model.DirectoryWatch.directory)
}

// string extension = 2;
inline void DirectoryWatch::clear_extension() {
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DirectoryWatch::extension() const {
  // @@protoc_insertion_point(field_get:v1.model.DirectoryWatch.extension)
  return extension_.GetNoArena();
}
inline void DirectoryWatch::set_extension(const ::std::string& value) {
  
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.DirectoryWatch.extension)
}
#if LANG_CXX11
inline void DirectoryWatch::set_extension(::std::string&& value) {
  
  extension_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.DirectoryWatch.extension)
}
#endif
inline void DirectoryWatch::set_extension(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.DirectoryWatch.extension)
}
inline void DirectoryWatch::set_extension(const char* value, size_t size) {
  
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.DirectoryWatch.extension)
}
inline ::std::string* DirectoryWatch::mutable_extension() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.DirectoryWatch.extension)
  return extension_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DirectoryWatch::release_extension() {
  // @@protoc_insertion_point(field_release:v1.model.DirectoryWatch.extension)
  
  return extension_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DirectoryWatch::set_allocated_extension(::std::string* extension) {
  if (extension != nullptr) {
    
  } else {
    
  }
  extension_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension);
  // @@protoc_insertion_point(field_set_allocated:v1.model.DirectoryWatch.extension)
}

// .v1.model.FileType file_type = 3;
inline void DirectoryWatch::clear_file_type() {
  file_type_ = 0;
}
inline ::v1::model::FileType DirectoryWatch::file_type() const {
  // @@protoc_insertion_point(field_get:v1.model.DirectoryWatch.file_type)
  return static_cast< ::v1::model::FileType >(file_type_);
}
inline void DirectoryWatch::set_file_type(::v1::model::FileType value) {
  
  file_type_ = value;
  // @@protoc_insertion_point(field_set:v1.model.DirectoryWatch.file_type)
}

// bool remote_agent = 4;
inline void DirectoryWatch::clear_remote_agent() {
  remote_agent_ = false;
}
inline bool DirectoryWatch::remote_agent() const {
  // @@protoc_insertion_point(field_get:v1.model.DirectoryWatch.remote_agent)
  return remote_agent_;
}
inline void DirectoryWatch::set_remote_agent(bool value) {
  
  remote_agent_ = value;
  // @@protoc_insertion_point(field_set:v1.model.DirectoryWatch.remote_agent)
}

// -------------------------------------------------------------------

// FileTail

// string filename = 1;
inline void FileTail::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileTail::filename() const {
  // @@protoc_insertion_point(field_get:v1.model.FileTail.filename)
  return filename_.GetNoArena();
}
inline void FileTail::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.FileTail.filename)
}
#if LANG_CXX11
inline void FileTail::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.FileTail.filename)
}
#endif
inline void FileTail::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.FileTail.filename)
}
inline void FileTail::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.FileTail.filename)
}
inline ::std::string* FileTail::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.FileTail.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTail::release_filename() {
  // @@protoc_insertion_point(field_release:v1.model.FileTail.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTail::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:v1.model.FileTail.filename)
}

// .v1.model.FileFormat file_format = 2;
inline void FileTail::clear_file_format() {
  file_format_ = 0;
}
inline ::v1::model::FileFormat FileTail::file_format() const {
  // @@protoc_insertion_point(field_get:v1.model.FileTail.file_format)
  return static_cast< ::v1::model::FileFormat >(file_format_);
}
inline void FileTail::set_file_format(::v1::model::FileFormat value) {
  
  file_format_ = value;
  // @@protoc_insertion_point(field_set:v1.model.FileTail.file_format)
}

// string time_key = 3;
inline void FileTail::clear_time_key() {
  time_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileTail::time_key() const {
  // @@protoc_insertion_point(field_get:v1.model.FileTail.time_key)
  return time_key_.GetNoArena();
}
inline void FileTail::set_time_key(const ::std::string& value) {
  
  time_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.FileTail.time_key)
}
#if LANG_CXX11
inline void FileTail::set_time_key(::std::string&& value) {
  
  time_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.FileTail.time_key)
}
#endif
inline void FileTail::set_time_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  time_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.FileTail.time_key)
}
inline void FileTail::set_time_key(const char* value, size_t size) {
  
  time_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.FileTail.time_key)
}
inline ::std::string* FileTail::mutable_time_key() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.FileTail.time_key)
  return time_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTail::release_time_key() {
  // @@protoc_insertion_point(field_release:v1.model.FileTail.time_key)
  
  return time_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTail::set_allocated_time_key(::std::string* time_key) {
  if (time_key != nullptr) {
    
  } else {
    
  }
  time_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_key);
  // @@protoc_insertion_point(field_set_allocated:v1.model.FileTail.time_key)
}

// string time_format = 4;
inline void FileTail::clear_time_format() {
  time_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileTail::time_format() const {
  // @@protoc_insertion_point(field_get:v1.model.FileTail.time_format)
  return time_format_.GetNoArena();
}
inline void FileTail::set_time_format(const ::std::string& value) {
  
  time_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.FileTail.time_format)
}
#if LANG_CXX11
inline void FileTail::set_time_format(::std::string&& value) {
  
  time_format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.FileTail.time_format)
}
#endif
inline void FileTail::set_time_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  time_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.FileTail.time_format)
}
inline void FileTail::set_time_format(const char* value, size_t size) {
  
  time_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.FileTail.time_format)
}
inline ::std::string* FileTail::mutable_time_format() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.FileTail.time_format)
  return time_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTail::release_time_format() {
  // @@protoc_insertion_point(field_release:v1.model.FileTail.time_format)
  
  return time_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTail::set_allocated_time_format(::std::string* time_format) {
  if (time_format != nullptr) {
    
  } else {
    
  }
  time_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_format);
  // @@protoc_insertion_point(field_set_allocated:v1.model.FileTail.time_format)
}

// string regex = 5;
inline void FileTail::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileTail::regex() const {
  // @@protoc_insertion_point(field_get:v1.model.FileTail.regex)
  return regex_.GetNoArena();
}
inline void FileTail::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.model.FileTail.regex)
}
#if LANG_CXX11
inline void FileTail::set_regex(::std::string&& value) {
  
  regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.model.FileTail.regex)
}
#endif
inline void FileTail::set_regex(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.model.FileTail.regex)
}
inline void FileTail::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.model.FileTail.regex)
}
inline ::std::string* FileTail::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:v1.model.FileTail.regex)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTail::release_regex() {
  // @@protoc_insertion_point(field_release:v1.model.FileTail.regex)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTail::set_allocated_regex(::std::string* regex) {
  if (regex != nullptr) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:v1.model.FileTail.regex)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace v1

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::v1::model::FileFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::v1::model::FileFormat>() {
  return ::v1::model::FileFormat_descriptor();
}
template <> struct is_proto_enum< ::v1::model::FileType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::v1::model::FileType>() {
  return ::v1::model::FileType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_protos_2fmodel_2fv1_2fconfig_2eproto
