// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/datapoint.proto

#include "protos/model/v1/datapoint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fdatapoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Datapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2ffile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fhealth_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Health_protos_2fmodel_2fv1_2fhealth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmath_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Numeric_protos_2fmodel_2fv1_2fmath_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmath_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BitSet_protos_2fmodel_2fv1_2fmath_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmath_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetricSet_protos_2fmodel_2fv1_2fmath_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmedia_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image_protos_2fmodel_2fv1_2fmedia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmedia_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointCloud_protos_2fmodel_2fv1_2fmedia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fmedia_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Video_protos_2fmodel_2fv1_2fmedia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fnavigation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Location_protos_2fmodel_2fv1_2fnavigation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fnavigation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Localization_protos_2fmodel_2fv1_2fnavigation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fros_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2ftext_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Text_protos_2fmodel_2fv1_2ftext_2eproto;
namespace v1 {
namespace model {
class Datapoint_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Datapoint_TagsEntry_DoNotUse> _instance;
} _Datapoint_TagsEntry_DoNotUse_default_instance_;
class DatapointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Datapoint> _instance;
  const ::v1::model::Text* text_;
  const ::v1::model::Numeric* numeric_;
  const ::v1::model::MetricSet* metric_set_;
  const ::v1::model::BitSet* bitset_;
  const ::v1::model::File* file_;
  const ::v1::model::Image* image_;
  const ::v1::model::Video* video_;
  const ::v1::model::PointCloud* point_cloud_;
  const ::v1::model::Location* location_;
  const ::v1::model::ROSMessage* ros_message_;
  const ::v1::model::Localization* localization_;
  const ::v1::model::Health* health_;
} _Datapoint_default_instance_;
}  // namespace model
}  // namespace v1
static void InitDefaultsDatapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_Datapoint_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::v1::model::Datapoint_TagsEntry_DoNotUse();
  }
  ::v1::model::Datapoint_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Datapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDatapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto}, {}};

static void InitDefaultsDatapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_Datapoint_default_instance_;
    new (ptr) ::v1::model::Datapoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::Datapoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<13> scc_info_Datapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 13, InitDefaultsDatapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto}, {
      &scc_info_Datapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto.base,
      &scc_info_Text_protos_2fmodel_2fv1_2ftext_2eproto.base,
      &scc_info_Numeric_protos_2fmodel_2fv1_2fmath_2eproto.base,
      &scc_info_MetricSet_protos_2fmodel_2fv1_2fmath_2eproto.base,
      &scc_info_BitSet_protos_2fmodel_2fv1_2fmath_2eproto.base,
      &scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto.base,
      &scc_info_Image_protos_2fmodel_2fv1_2fmedia_2eproto.base,
      &scc_info_Video_protos_2fmodel_2fv1_2fmedia_2eproto.base,
      &scc_info_PointCloud_protos_2fmodel_2fv1_2fmedia_2eproto.base,
      &scc_info_Location_protos_2fmodel_2fv1_2fnavigation_2eproto.base,
      &scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto.base,
      &scc_info_Localization_protos_2fmodel_2fv1_2fnavigation_2eproto.base,
      &scc_info_Health_protos_2fmodel_2fv1_2fhealth_2eproto.base,}};

void InitDefaults_protos_2fmodel_2fv1_2fdatapoint_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Datapoint_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fdatapoint_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Datapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protos_2fmodel_2fv1_2fdatapoint_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protos_2fmodel_2fv1_2fdatapoint_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, stream_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, timestamp_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, tags_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, text_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, numeric_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, metric_set_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, bitset_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, file_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, image_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, video_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, point_cloud_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, location_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, ros_message_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, localization_),
  offsetof(::v1::model::DatapointDefaultTypeInternal, health_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Datapoint, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::v1::model::Datapoint_TagsEntry_DoNotUse)},
  { 9, -1, sizeof(::v1::model::Datapoint)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_Datapoint_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_Datapoint_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protos_2fmodel_2fv1_2fdatapoint_2eproto = {
  {}, AddDescriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto, "protos/model/v1/datapoint.proto", schemas,
  file_default_instances, TableStruct_protos_2fmodel_2fv1_2fdatapoint_2eproto::offsets,
  file_level_metadata_protos_2fmodel_2fv1_2fdatapoint_2eproto, 2, file_level_enum_descriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto, file_level_service_descriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto,
};

const char descriptor_table_protodef_protos_2fmodel_2fv1_2fdatapoint_2eproto[] =
  "\n\037protos/model/v1/datapoint.proto\022\010v1.mo"
  "del\032\032protos/model/v1/file.proto\032\034protos/"
  "model/v1/health.proto\032\032protos/model/v1/m"
  "ath.proto\032 protos/model/v1/navigation.pr"
  "oto\032\031protos/model/v1/ros.proto\032\032protos/m"
  "odel/v1/text.proto\032\033protos/model/v1/medi"
  "a.proto\"\337\004\n\tDatapoint\022\016\n\006stream\030\001 \001(\t\022\021\n"
  "\ttimestamp\030\002 \001(\003\022+\n\004tags\030\016 \003(\0132\035.v1.mode"
  "l.Datapoint.TagsEntry\022\036\n\004text\030\003 \001(\0132\016.v1"
  ".model.TextH\000\022$\n\007numeric\030\004 \001(\0132\021.v1.mode"
  "l.NumericH\000\022)\n\nmetric_set\030\017 \001(\0132\023.v1.mod"
  "el.MetricSetH\000\022\"\n\006bitset\030\r \001(\0132\020.v1.mode"
  "l.BitSetH\000\022\036\n\004file\030\005 \001(\0132\016.v1.model.File"
  "H\000\022 \n\005image\030\006 \001(\0132\017.v1.model.ImageH\000\022 \n\005"
  "video\030\007 \001(\0132\017.v1.model.VideoH\000\022+\n\013point_"
  "cloud\030\010 \001(\0132\024.v1.model.PointCloudH\000\022&\n\010l"
  "ocation\030\t \001(\0132\022.v1.model.LocationH\000\022+\n\013r"
  "os_message\030\n \001(\0132\024.v1.model.ROSMessageH\000"
  "\022.\n\014localization\030\013 \001(\0132\026.v1.model.Locali"
  "zationH\000\022\"\n\006health\030\014 \001(\0132\020.v1.model.Heal"
  "thH\000\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001B\006\n\004dataB+Z)github.com/FormantI"
  "O/genproto/go/v1/modelb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protos_2fmodel_2fv1_2fdatapoint_2eproto = {
  false, InitDefaults_protos_2fmodel_2fv1_2fdatapoint_2eproto, 
  descriptor_table_protodef_protos_2fmodel_2fv1_2fdatapoint_2eproto,
  "protos/model/v1/datapoint.proto", &assign_descriptors_table_protos_2fmodel_2fv1_2fdatapoint_2eproto, 910,
};

void AddDescriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[7] =
  {
    ::AddDescriptors_protos_2fmodel_2fv1_2ffile_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2fhealth_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2fmath_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2fnavigation_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2fros_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2ftext_2eproto,
    ::AddDescriptors_protos_2fmodel_2fv1_2fmedia_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fdatapoint_2eproto, deps, 7);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fmodel_2fv1_2fdatapoint_2eproto = []() { AddDescriptors_protos_2fmodel_2fv1_2fdatapoint_2eproto(); return true; }();
namespace v1 {
namespace model {

// ===================================================================

Datapoint_TagsEntry_DoNotUse::Datapoint_TagsEntry_DoNotUse() {}
Datapoint_TagsEntry_DoNotUse::Datapoint_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Datapoint_TagsEntry_DoNotUse::MergeFrom(const Datapoint_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Datapoint_TagsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fdatapoint_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fdatapoint_2eproto[0];
}
void Datapoint_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Datapoint_TagsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Datapoint_TagsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.Datapoint.TagsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.Datapoint.TagsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Datapoint::InitAsDefaultInstance() {
  ::v1::model::_Datapoint_default_instance_.text_ = const_cast< ::v1::model::Text*>(
      ::v1::model::Text::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.numeric_ = const_cast< ::v1::model::Numeric*>(
      ::v1::model::Numeric::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.metric_set_ = const_cast< ::v1::model::MetricSet*>(
      ::v1::model::MetricSet::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.bitset_ = const_cast< ::v1::model::BitSet*>(
      ::v1::model::BitSet::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.file_ = const_cast< ::v1::model::File*>(
      ::v1::model::File::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.image_ = const_cast< ::v1::model::Image*>(
      ::v1::model::Image::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.video_ = const_cast< ::v1::model::Video*>(
      ::v1::model::Video::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.point_cloud_ = const_cast< ::v1::model::PointCloud*>(
      ::v1::model::PointCloud::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.location_ = const_cast< ::v1::model::Location*>(
      ::v1::model::Location::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.ros_message_ = const_cast< ::v1::model::ROSMessage*>(
      ::v1::model::ROSMessage::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.localization_ = const_cast< ::v1::model::Localization*>(
      ::v1::model::Localization::internal_default_instance());
  ::v1::model::_Datapoint_default_instance_.health_ = const_cast< ::v1::model::Health*>(
      ::v1::model::Health::internal_default_instance());
}
class Datapoint::HasBitSetters {
 public:
  static const ::v1::model::Text& text(const Datapoint* msg);
  static const ::v1::model::Numeric& numeric(const Datapoint* msg);
  static const ::v1::model::MetricSet& metric_set(const Datapoint* msg);
  static const ::v1::model::BitSet& bitset(const Datapoint* msg);
  static const ::v1::model::File& file(const Datapoint* msg);
  static const ::v1::model::Image& image(const Datapoint* msg);
  static const ::v1::model::Video& video(const Datapoint* msg);
  static const ::v1::model::PointCloud& point_cloud(const Datapoint* msg);
  static const ::v1::model::Location& location(const Datapoint* msg);
  static const ::v1::model::ROSMessage& ros_message(const Datapoint* msg);
  static const ::v1::model::Localization& localization(const Datapoint* msg);
  static const ::v1::model::Health& health(const Datapoint* msg);
};

const ::v1::model::Text&
Datapoint::HasBitSetters::text(const Datapoint* msg) {
  return *msg->data_.text_;
}
const ::v1::model::Numeric&
Datapoint::HasBitSetters::numeric(const Datapoint* msg) {
  return *msg->data_.numeric_;
}
const ::v1::model::MetricSet&
Datapoint::HasBitSetters::metric_set(const Datapoint* msg) {
  return *msg->data_.metric_set_;
}
const ::v1::model::BitSet&
Datapoint::HasBitSetters::bitset(const Datapoint* msg) {
  return *msg->data_.bitset_;
}
const ::v1::model::File&
Datapoint::HasBitSetters::file(const Datapoint* msg) {
  return *msg->data_.file_;
}
const ::v1::model::Image&
Datapoint::HasBitSetters::image(const Datapoint* msg) {
  return *msg->data_.image_;
}
const ::v1::model::Video&
Datapoint::HasBitSetters::video(const Datapoint* msg) {
  return *msg->data_.video_;
}
const ::v1::model::PointCloud&
Datapoint::HasBitSetters::point_cloud(const Datapoint* msg) {
  return *msg->data_.point_cloud_;
}
const ::v1::model::Location&
Datapoint::HasBitSetters::location(const Datapoint* msg) {
  return *msg->data_.location_;
}
const ::v1::model::ROSMessage&
Datapoint::HasBitSetters::ros_message(const Datapoint* msg) {
  return *msg->data_.ros_message_;
}
const ::v1::model::Localization&
Datapoint::HasBitSetters::localization(const Datapoint* msg) {
  return *msg->data_.localization_;
}
const ::v1::model::Health&
Datapoint::HasBitSetters::health(const Datapoint* msg) {
  return *msg->data_.health_;
}
void Datapoint::set_allocated_text(::v1::model::Text* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (text) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    data_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.text)
}
void Datapoint::clear_text() {
  if (has_text()) {
    delete data_.text_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_numeric(::v1::model::Numeric* numeric) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (numeric) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      numeric = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, numeric, submessage_arena);
    }
    set_has_numeric();
    data_.numeric_ = numeric;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.numeric)
}
void Datapoint::clear_numeric() {
  if (has_numeric()) {
    delete data_.numeric_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_metric_set(::v1::model::MetricSet* metric_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (metric_set) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metric_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_set, submessage_arena);
    }
    set_has_metric_set();
    data_.metric_set_ = metric_set;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.metric_set)
}
void Datapoint::clear_metric_set() {
  if (has_metric_set()) {
    delete data_.metric_set_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_bitset(::v1::model::BitSet* bitset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (bitset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bitset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bitset, submessage_arena);
    }
    set_has_bitset();
    data_.bitset_ = bitset;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.bitset)
}
void Datapoint::clear_bitset() {
  if (has_bitset()) {
    delete data_.bitset_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_file(::v1::model::File* file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (file) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    set_has_file();
    data_.file_ = file;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.file)
}
void Datapoint::clear_file() {
  if (has_file()) {
    delete data_.file_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_image(::v1::model::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (image) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    set_has_image();
    data_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.image)
}
void Datapoint::clear_image() {
  if (has_image()) {
    delete data_.image_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_video(::v1::model::Video* video) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (video) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      video = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, video, submessage_arena);
    }
    set_has_video();
    data_.video_ = video;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.video)
}
void Datapoint::clear_video() {
  if (has_video()) {
    delete data_.video_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_point_cloud(::v1::model::PointCloud* point_cloud) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (point_cloud) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      point_cloud = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, point_cloud, submessage_arena);
    }
    set_has_point_cloud();
    data_.point_cloud_ = point_cloud;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.point_cloud)
}
void Datapoint::clear_point_cloud() {
  if (has_point_cloud()) {
    delete data_.point_cloud_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_location(::v1::model::Location* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (location) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    set_has_location();
    data_.location_ = location;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.location)
}
void Datapoint::clear_location() {
  if (has_location()) {
    delete data_.location_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_ros_message(::v1::model::ROSMessage* ros_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ros_message) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ros_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ros_message, submessage_arena);
    }
    set_has_ros_message();
    data_.ros_message_ = ros_message;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.ros_message)
}
void Datapoint::clear_ros_message() {
  if (has_ros_message()) {
    delete data_.ros_message_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_localization(::v1::model::Localization* localization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (localization) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      localization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, localization, submessage_arena);
    }
    set_has_localization();
    data_.localization_ = localization;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.localization)
}
void Datapoint::clear_localization() {
  if (has_localization()) {
    delete data_.localization_;
    clear_has_data();
  }
}
void Datapoint::set_allocated_health(::v1::model::Health* health) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (health) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      health = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, health, submessage_arena);
    }
    set_has_health();
    data_.health_ = health;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.Datapoint.health)
}
void Datapoint::clear_health() {
  if (has_health()) {
    delete data_.health_;
    clear_has_data();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Datapoint::kStreamFieldNumber;
const int Datapoint::kTimestampFieldNumber;
const int Datapoint::kTagsFieldNumber;
const int Datapoint::kTextFieldNumber;
const int Datapoint::kNumericFieldNumber;
const int Datapoint::kMetricSetFieldNumber;
const int Datapoint::kBitsetFieldNumber;
const int Datapoint::kFileFieldNumber;
const int Datapoint::kImageFieldNumber;
const int Datapoint::kVideoFieldNumber;
const int Datapoint::kPointCloudFieldNumber;
const int Datapoint::kLocationFieldNumber;
const int Datapoint::kRosMessageFieldNumber;
const int Datapoint::kLocalizationFieldNumber;
const int Datapoint::kHealthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Datapoint::Datapoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.Datapoint)
}
Datapoint::Datapoint(const Datapoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  timestamp_ = from.timestamp_;
  clear_has_data();
  switch (from.data_case()) {
    case kText: {
      mutable_text()->::v1::model::Text::MergeFrom(from.text());
      break;
    }
    case kNumeric: {
      mutable_numeric()->::v1::model::Numeric::MergeFrom(from.numeric());
      break;
    }
    case kMetricSet: {
      mutable_metric_set()->::v1::model::MetricSet::MergeFrom(from.metric_set());
      break;
    }
    case kBitset: {
      mutable_bitset()->::v1::model::BitSet::MergeFrom(from.bitset());
      break;
    }
    case kFile: {
      mutable_file()->::v1::model::File::MergeFrom(from.file());
      break;
    }
    case kImage: {
      mutable_image()->::v1::model::Image::MergeFrom(from.image());
      break;
    }
    case kVideo: {
      mutable_video()->::v1::model::Video::MergeFrom(from.video());
      break;
    }
    case kPointCloud: {
      mutable_point_cloud()->::v1::model::PointCloud::MergeFrom(from.point_cloud());
      break;
    }
    case kLocation: {
      mutable_location()->::v1::model::Location::MergeFrom(from.location());
      break;
    }
    case kRosMessage: {
      mutable_ros_message()->::v1::model::ROSMessage::MergeFrom(from.ros_message());
      break;
    }
    case kLocalization: {
      mutable_localization()->::v1::model::Localization::MergeFrom(from.localization());
      break;
    }
    case kHealth: {
      mutable_health()->::v1::model::Health::MergeFrom(from.health());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.Datapoint)
}

void Datapoint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Datapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto.base);
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  clear_has_data();
}

Datapoint::~Datapoint() {
  // @@protoc_insertion_point(destructor:v1.model.Datapoint)
  SharedDtor();
}

void Datapoint::SharedDtor() {
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
}

void Datapoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Datapoint& Datapoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Datapoint_protos_2fmodel_2fv1_2fdatapoint_2eproto.base);
  return *internal_default_instance();
}


void Datapoint::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:v1.model.Datapoint)
  switch (data_case()) {
    case kText: {
      delete data_.text_;
      break;
    }
    case kNumeric: {
      delete data_.numeric_;
      break;
    }
    case kMetricSet: {
      delete data_.metric_set_;
      break;
    }
    case kBitset: {
      delete data_.bitset_;
      break;
    }
    case kFile: {
      delete data_.file_;
      break;
    }
    case kImage: {
      delete data_.image_;
      break;
    }
    case kVideo: {
      delete data_.video_;
      break;
    }
    case kPointCloud: {
      delete data_.point_cloud_;
      break;
    }
    case kLocation: {
      delete data_.location_;
      break;
    }
    case kRosMessage: {
      delete data_.ros_message_;
      break;
    }
    case kLocalization: {
      delete data_.localization_;
      break;
    }
    case kHealth: {
      delete data_.health_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void Datapoint::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.Datapoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  clear_data();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Datapoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Datapoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string stream = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.Datapoint.stream");
        object = msg->mutable_stream();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .v1.model.Text text = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Text::_InternalParse;
        object = msg->mutable_text();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Numeric numeric = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Numeric::_InternalParse;
        object = msg->mutable_numeric();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.File file = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::File::_InternalParse;
        object = msg->mutable_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Image image = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Image::_InternalParse;
        object = msg->mutable_image();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Video video = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Video::_InternalParse;
        object = msg->mutable_video();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.PointCloud point_cloud = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::PointCloud::_InternalParse;
        object = msg->mutable_point_cloud();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Location location = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Location::_InternalParse;
        object = msg->mutable_location();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.ROSMessage ros_message = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::ROSMessage::_InternalParse;
        object = msg->mutable_ros_message();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Localization localization = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Localization::_InternalParse;
        object = msg->mutable_localization();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.Health health = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::Health::_InternalParse;
        object = msg->mutable_health();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .v1.model.BitSet bitset = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::BitSet::_InternalParse;
        object = msg->mutable_bitset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> tags = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::v1::model::Datapoint_TagsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->tags_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 114 && (ptr += 1));
        break;
      }
      // .v1.model.MetricSet metric_set = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::v1::model::MetricSet::_InternalParse;
        object = msg->mutable_metric_set();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Datapoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.Datapoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string stream = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stream().data(), static_cast<int>(this->stream().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.Datapoint.stream"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Text text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Numeric numeric = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_numeric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.File file = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Image image = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Video video = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_video()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.PointCloud point_cloud = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_point_cloud()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Location location = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.ROSMessage ros_message = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ros_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Localization localization = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_localization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.Health health = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_health()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.BitSet bitset = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bitset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          Datapoint_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Datapoint_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.Datapoint.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.Datapoint.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.model.MetricSet metric_set = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.Datapoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.Datapoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Datapoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.Datapoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream = 1;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stream().data(), static_cast<int>(this->stream().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.Datapoint.stream");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stream(), output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // .v1.model.Text text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::text(this), output);
  }

  // .v1.model.Numeric numeric = 4;
  if (has_numeric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::numeric(this), output);
  }

  // .v1.model.File file = 5;
  if (has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::file(this), output);
  }

  // .v1.model.Image image = 6;
  if (has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::image(this), output);
  }

  // .v1.model.Video video = 7;
  if (has_video()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::video(this), output);
  }

  // .v1.model.PointCloud point_cloud = 8;
  if (has_point_cloud()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::point_cloud(this), output);
  }

  // .v1.model.Location location = 9;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::location(this), output);
  }

  // .v1.model.ROSMessage ros_message = 10;
  if (has_ros_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::ros_message(this), output);
  }

  // .v1.model.Localization localization = 11;
  if (has_localization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::localization(this), output);
  }

  // .v1.model.Health health = 12;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::health(this), output);
  }

  // .v1.model.BitSet bitset = 13;
  if (has_bitset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::bitset(this), output);
  }

  // map<string, string> tags = 14;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.Datapoint.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.Datapoint.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Datapoint_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(14, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Datapoint_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(14, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.MetricSet metric_set = 15;
  if (has_metric_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::metric_set(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.Datapoint)
}

::google::protobuf::uint8* Datapoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.Datapoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream = 1;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stream().data(), static_cast<int>(this->stream().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.Datapoint.stream");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stream(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // .v1.model.Text text = 3;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::text(this), target);
  }

  // .v1.model.Numeric numeric = 4;
  if (has_numeric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::numeric(this), target);
  }

  // .v1.model.File file = 5;
  if (has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::file(this), target);
  }

  // .v1.model.Image image = 6;
  if (has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::image(this), target);
  }

  // .v1.model.Video video = 7;
  if (has_video()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::video(this), target);
  }

  // .v1.model.PointCloud point_cloud = 8;
  if (has_point_cloud()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::point_cloud(this), target);
  }

  // .v1.model.Location location = 9;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::location(this), target);
  }

  // .v1.model.ROSMessage ros_message = 10;
  if (has_ros_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::ros_message(this), target);
  }

  // .v1.model.Localization localization = 11;
  if (has_localization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::localization(this), target);
  }

  // .v1.model.Health health = 12;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::health(this), target);
  }

  // .v1.model.BitSet bitset = 13;
  if (has_bitset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::bitset(this), target);
  }

  // map<string, string> tags = 14;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.Datapoint.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.Datapoint.TagsEntry.value");
      }
    };

    if (false &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Datapoint_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(14, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Datapoint_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(14, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .v1.model.MetricSet metric_set = 15;
  if (has_metric_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::metric_set(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.Datapoint)
  return target;
}

size_t Datapoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.Datapoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<Datapoint_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string stream = 1;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stream());
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  switch (data_case()) {
    // .v1.model.Text text = 3;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.text_);
      break;
    }
    // .v1.model.Numeric numeric = 4;
    case kNumeric: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.numeric_);
      break;
    }
    // .v1.model.MetricSet metric_set = 15;
    case kMetricSet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.metric_set_);
      break;
    }
    // .v1.model.BitSet bitset = 13;
    case kBitset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.bitset_);
      break;
    }
    // .v1.model.File file = 5;
    case kFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.file_);
      break;
    }
    // .v1.model.Image image = 6;
    case kImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.image_);
      break;
    }
    // .v1.model.Video video = 7;
    case kVideo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.video_);
      break;
    }
    // .v1.model.PointCloud point_cloud = 8;
    case kPointCloud: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.point_cloud_);
      break;
    }
    // .v1.model.Location location = 9;
    case kLocation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.location_);
      break;
    }
    // .v1.model.ROSMessage ros_message = 10;
    case kRosMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.ros_message_);
      break;
    }
    // .v1.model.Localization localization = 11;
    case kLocalization: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.localization_);
      break;
    }
    // .v1.model.Health health = 12;
    case kHealth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.health_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Datapoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.Datapoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Datapoint* source =
      ::google::protobuf::DynamicCastToGenerated<Datapoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.Datapoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.Datapoint)
    MergeFrom(*source);
  }
}

void Datapoint::MergeFrom(const Datapoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.Datapoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  switch (from.data_case()) {
    case kText: {
      mutable_text()->::v1::model::Text::MergeFrom(from.text());
      break;
    }
    case kNumeric: {
      mutable_numeric()->::v1::model::Numeric::MergeFrom(from.numeric());
      break;
    }
    case kMetricSet: {
      mutable_metric_set()->::v1::model::MetricSet::MergeFrom(from.metric_set());
      break;
    }
    case kBitset: {
      mutable_bitset()->::v1::model::BitSet::MergeFrom(from.bitset());
      break;
    }
    case kFile: {
      mutable_file()->::v1::model::File::MergeFrom(from.file());
      break;
    }
    case kImage: {
      mutable_image()->::v1::model::Image::MergeFrom(from.image());
      break;
    }
    case kVideo: {
      mutable_video()->::v1::model::Video::MergeFrom(from.video());
      break;
    }
    case kPointCloud: {
      mutable_point_cloud()->::v1::model::PointCloud::MergeFrom(from.point_cloud());
      break;
    }
    case kLocation: {
      mutable_location()->::v1::model::Location::MergeFrom(from.location());
      break;
    }
    case kRosMessage: {
      mutable_ros_message()->::v1::model::ROSMessage::MergeFrom(from.ros_message());
      break;
    }
    case kLocalization: {
      mutable_localization()->::v1::model::Localization::MergeFrom(from.localization());
      break;
    }
    case kHealth: {
      mutable_health()->::v1::model::Health::MergeFrom(from.health());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void Datapoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.Datapoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Datapoint::CopyFrom(const Datapoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.Datapoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Datapoint::IsInitialized() const {
  return true;
}

void Datapoint::Swap(Datapoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Datapoint::InternalSwap(Datapoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.Swap(&other->tags_);
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Datapoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fdatapoint_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fdatapoint_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace v1
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::v1::model::Datapoint_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::v1::model::Datapoint_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::Datapoint_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::Datapoint* Arena::CreateMaybeMessage< ::v1::model::Datapoint >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::Datapoint >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
