// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/file.proto

#include "protos/model/v1/file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace v1 {
namespace model {
class FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<File> _instance;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr raw_;
  ::google::protobuf::internal::ArenaStringPtr preview_url_;
  ::google::protobuf::internal::ArenaStringPtr preview_raw_;
} _File_default_instance_;
}  // namespace model
}  // namespace v1
static void InitDefaultsFile_protos_2fmodel_2fv1_2ffile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_File_default_instance_;
    new (ptr) ::v1::model::File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFile_protos_2fmodel_2fv1_2ffile_2eproto}, {}};

void InitDefaults_protos_2fmodel_2fv1_2ffile_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protos_2fmodel_2fv1_2ffile_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_protos_2fmodel_2fv1_2ffile_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protos_2fmodel_2fv1_2ffile_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protos_2fmodel_2fv1_2ffile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::File, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::v1::model::File, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::v1::model::FileDefaultTypeInternal, url_),
  offsetof(::v1::model::FileDefaultTypeInternal, raw_),
  PROTOBUF_FIELD_OFFSET(::v1::model::File, filename_),
  PROTOBUF_FIELD_OFFSET(::v1::model::File, size_),
  offsetof(::v1::model::FileDefaultTypeInternal, preview_url_),
  offsetof(::v1::model::FileDefaultTypeInternal, preview_raw_),
  PROTOBUF_FIELD_OFFSET(::v1::model::File, data_),
  PROTOBUF_FIELD_OFFSET(::v1::model::File, preview_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v1::model::File)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_File_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protos_2fmodel_2fv1_2ffile_2eproto = {
  {}, AddDescriptors_protos_2fmodel_2fv1_2ffile_2eproto, "protos/model/v1/file.proto", schemas,
  file_default_instances, TableStruct_protos_2fmodel_2fv1_2ffile_2eproto::offsets,
  file_level_metadata_protos_2fmodel_2fv1_2ffile_2eproto, 1, file_level_enum_descriptors_protos_2fmodel_2fv1_2ffile_2eproto, file_level_service_descriptors_protos_2fmodel_2fv1_2ffile_2eproto,
};

const char descriptor_table_protodef_protos_2fmodel_2fv1_2ffile_2eproto[] =
  "\n\032protos/model/v1/file.proto\022\010v1.model\"\205"
  "\001\n\004File\022\r\n\003url\030\001 \001(\tH\000\022\r\n\003raw\030\002 \001(\014H\000\022\020\n"
  "\010filename\030\003 \001(\t\022\014\n\004size\030\004 \001(\003\022\025\n\013preview"
  "_url\030\005 \001(\tH\001\022\025\n\013preview_raw\030\006 \001(\014H\001B\006\n\004d"
  "ataB\t\n\007previewB+Z)github.com/FormantIO/g"
  "enproto/go/v1/modelb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protos_2fmodel_2fv1_2ffile_2eproto = {
  false, InitDefaults_protos_2fmodel_2fv1_2ffile_2eproto, 
  descriptor_table_protodef_protos_2fmodel_2fv1_2ffile_2eproto,
  "protos/model/v1/file.proto", &assign_descriptors_table_protos_2fmodel_2fv1_2ffile_2eproto, 227,
};

void AddDescriptors_protos_2fmodel_2fv1_2ffile_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protos_2fmodel_2fv1_2ffile_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fmodel_2fv1_2ffile_2eproto = []() { AddDescriptors_protos_2fmodel_2fv1_2ffile_2eproto(); return true; }();
namespace v1 {
namespace model {

// ===================================================================

void File::InitAsDefaultInstance() {
  ::v1::model::_File_default_instance_.url_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::v1::model::_File_default_instance_.raw_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::v1::model::_File_default_instance_.preview_url_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::v1::model::_File_default_instance_.preview_raw_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class File::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kUrlFieldNumber;
const int File::kRawFieldNumber;
const int File::kFilenameFieldNumber;
const int File::kSizeFieldNumber;
const int File::kPreviewUrlFieldNumber;
const int File::kPreviewRawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.File)
}
File::File(const File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  size_ = from.size_;
  clear_has_data();
  switch (from.data_case()) {
    case kUrl: {
      set_url(from.url());
      break;
    }
    case kRaw: {
      set_raw(from.raw());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  clear_has_preview();
  switch (from.preview_case()) {
    case kPreviewUrl: {
      set_preview_url(from.preview_url());
      break;
    }
    case kPreviewRaw: {
      set_preview_raw(from.preview_raw());
      break;
    }
    case PREVIEW_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.File)
}

void File::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
  clear_has_data();
  clear_has_preview();
}

File::~File() {
  // @@protoc_insertion_point(destructor:v1.model.File)
  SharedDtor();
}

void File::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
  if (has_preview()) {
    clear_preview();
  }
}

void File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const File& File::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_File_protos_2fmodel_2fv1_2ffile_2eproto.base);
  return *internal_default_instance();
}


void File::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:v1.model.File)
  switch (data_case()) {
    case kUrl: {
      data_.url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRaw: {
      data_.raw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}

void File::clear_preview() {
// @@protoc_insertion_point(one_of_clear_start:v1.model.File)
  switch (preview_case()) {
    case kPreviewUrl: {
      preview_.preview_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPreviewRaw: {
      preview_.preview_raw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PREVIEW_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = PREVIEW_NOT_SET;
}


void File::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
  clear_data();
  clear_preview();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* File::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<File*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.File.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes raw = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_raw();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filename = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.File.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 size = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string preview_url = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.File.preview_url");
        object = msg->mutable_preview_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes preview_raw = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_preview_raw();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.File.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes raw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.File.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string preview_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->preview_url().data(), static_cast<int>(this->preview_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.File.preview_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes preview_raw = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_preview_raw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.File)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // bytes raw = 2;
  if (has_raw()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->raw(), output);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->size(), output);
  }

  // string preview_url = 5;
  if (has_preview_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->preview_url().data(), static_cast<int>(this->preview_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.preview_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->preview_url(), output);
  }

  // bytes preview_raw = 6;
  if (has_preview_raw()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->preview_raw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // bytes raw = 2;
  if (has_raw()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->raw(), target);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->size(), target);
  }

  // string preview_url = 5;
  if (has_preview_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->preview_url().data(), static_cast<int>(this->preview_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.File.preview_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->preview_url(), target);
  }

  // bytes preview_raw = 6;
  if (has_preview_raw()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->preview_raw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.File)
  return target;
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // int64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  switch (data_case()) {
    // string url = 1;
    case kUrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
      break;
    }
    // bytes raw = 2;
    case kRaw: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->raw());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  switch (preview_case()) {
    // string preview_url = 5;
    case kPreviewUrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_url());
      break;
    }
    // bytes preview_raw = 6;
    case kPreviewRaw: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->preview_raw());
      break;
    }
    case PREVIEW_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.File)
  GOOGLE_DCHECK_NE(&from, this);
  const File* source =
      ::google::protobuf::DynamicCastToGenerated<File>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  switch (from.data_case()) {
    case kUrl: {
      set_url(from.url());
      break;
    }
    case kRaw: {
      set_raw(from.raw());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  switch (from.preview_case()) {
    case kPreviewUrl: {
      set_preview_url(from.preview_url());
      break;
    }
    case kPreviewRaw: {
      set_preview_raw(from.preview_raw());
      break;
    }
    case PREVIEW_NOT_SET: {
      break;
    }
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(data_, other->data_);
  swap(preview_, other->preview_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::google::protobuf::Metadata File::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2ffile_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2ffile_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace v1
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::v1::model::File* Arena::CreateMaybeMessage< ::v1::model::File >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::File >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
