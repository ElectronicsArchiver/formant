// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/ros.proto

#include "protos/model/v1/ros.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_protos_2fmodel_2fv1_2fros_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto;
namespace v1 {
namespace model {
class ROSMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROSMessage> _instance;
} _ROSMessage_default_instance_;
class ROSTopicSubscriptionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROSTopicSubscriptionConfig> _instance;
} _ROSTopicSubscriptionConfig_default_instance_;
class ROSTopic_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROSTopic_TagsEntry_DoNotUse> _instance;
} _ROSTopic_TagsEntry_DoNotUse_default_instance_;
class ROSTopicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROSTopic> _instance;
} _ROSTopic_default_instance_;
}  // namespace model
}  // namespace v1
static void InitDefaultsROSMessage_protos_2fmodel_2fv1_2fros_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ROSMessage_default_instance_;
    new (ptr) ::v1::model::ROSMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ROSMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsROSMessage_protos_2fmodel_2fv1_2fros_2eproto}, {}};

static void InitDefaultsROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ROSTopicSubscriptionConfig_default_instance_;
    new (ptr) ::v1::model::ROSTopicSubscriptionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ROSTopicSubscriptionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto}, {}};

static void InitDefaultsROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ROSTopic_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::v1::model::ROSTopic_TagsEntry_DoNotUse();
  }
  ::v1::model::ROSTopic_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto}, {}};

static void InitDefaultsROSTopic_protos_2fmodel_2fv1_2fros_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::model::_ROSTopic_default_instance_;
    new (ptr) ::v1::model::ROSTopic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::model::ROSTopic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsROSTopic_protos_2fmodel_2fv1_2fros_2eproto}, {
      &scc_info_ROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto.base,}};

void InitDefaults_protos_2fmodel_2fv1_2fros_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROSTopic_TagsEntry_DoNotUse_protos_2fmodel_2fv1_2fros_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_protos_2fmodel_2fv1_2fros_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protos_2fmodel_2fv1_2fros_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protos_2fmodel_2fv1_2fros_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSMessage, raw_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSMessage, world_to_local_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopicSubscriptionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopicSubscriptionConfig, topic_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopicSubscriptionConfig, include_transform_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic, name_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic, data_type_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic, msg_desc_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ROSTopic, tags_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v1::model::ROSMessage)},
  { 7, -1, sizeof(::v1::model::ROSTopicSubscriptionConfig)},
  { 14, 21, sizeof(::v1::model::ROSTopic_TagsEntry_DoNotUse)},
  { 23, -1, sizeof(::v1::model::ROSTopic)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ROSMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ROSTopicSubscriptionConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ROSTopic_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::model::_ROSTopic_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto = {
  {}, AddDescriptors_protos_2fmodel_2fv1_2fros_2eproto, "protos/model/v1/ros.proto", schemas,
  file_default_instances, TableStruct_protos_2fmodel_2fv1_2fros_2eproto::offsets,
  file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto, 4, file_level_enum_descriptors_protos_2fmodel_2fv1_2fros_2eproto, file_level_service_descriptors_protos_2fmodel_2fv1_2fros_2eproto,
};

const char descriptor_table_protodef_protos_2fmodel_2fv1_2fros_2eproto[] =
  "\n\031protos/model/v1/ros.proto\022\010v1.model\"1\n"
  "\nROSMessage\022\013\n\003raw\030\001 \001(\014\022\026\n\016world_to_loc"
  "al\030\002 \001(\014\"F\n\032ROSTopicSubscriptionConfig\022\r"
  "\n\005topic\030\001 \001(\t\022\031\n\021include_transform\030\002 \001(\010"
  "\"\226\001\n\010ROSTopic\022\014\n\004name\030\001 \001(\t\022\021\n\tdata_type"
  "\030\002 \001(\t\022\020\n\010msg_desc\030\003 \001(\t\022*\n\004tags\030\004 \003(\0132\034"
  ".v1.model.ROSTopic.TagsEntry\032+\n\tTagsEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B+Z)git"
  "hub.com/FormantIO/genproto/go/v1/modelb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protos_2fmodel_2fv1_2fros_2eproto = {
  false, InitDefaults_protos_2fmodel_2fv1_2fros_2eproto, 
  descriptor_table_protodef_protos_2fmodel_2fv1_2fros_2eproto,
  "protos/model/v1/ros.proto", &assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto, 366,
};

void AddDescriptors_protos_2fmodel_2fv1_2fros_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fros_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fmodel_2fv1_2fros_2eproto = []() { AddDescriptors_protos_2fmodel_2fv1_2fros_2eproto(); return true; }();
namespace v1 {
namespace model {

// ===================================================================

void ROSMessage::InitAsDefaultInstance() {
}
class ROSMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROSMessage::kRawFieldNumber;
const int ROSMessage::kWorldToLocalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROSMessage::ROSMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ROSMessage)
}
ROSMessage::ROSMessage(const ROSMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw().size() > 0) {
    raw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_);
  }
  world_to_local_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.world_to_local().size() > 0) {
    world_to_local_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.world_to_local_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.ROSMessage)
}

void ROSMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto.base);
  raw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  world_to_local_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ROSMessage::~ROSMessage() {
  // @@protoc_insertion_point(destructor:v1.model.ROSMessage)
  SharedDtor();
}

void ROSMessage::SharedDtor() {
  raw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  world_to_local_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ROSMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROSMessage& ROSMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ROSMessage_protos_2fmodel_2fv1_2fros_2eproto.base);
  return *internal_default_instance();
}


void ROSMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ROSMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  world_to_local_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ROSMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ROSMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes raw = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_raw();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes world_to_local = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_world_to_local();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROSMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ROSMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes raw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes world_to_local = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_world_to_local()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ROSMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ROSMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ROSMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ROSMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes raw = 1;
  if (this->raw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->raw(), output);
  }

  // bytes world_to_local = 2;
  if (this->world_to_local().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->world_to_local(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ROSMessage)
}

::google::protobuf::uint8* ROSMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ROSMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes raw = 1;
  if (this->raw().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->raw(), target);
  }

  // bytes world_to_local = 2;
  if (this->world_to_local().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->world_to_local(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ROSMessage)
  return target;
}

size_t ROSMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ROSMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes raw = 1;
  if (this->raw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw());
  }

  // bytes world_to_local = 2;
  if (this->world_to_local().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->world_to_local());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROSMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ROSMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ROSMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ROSMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ROSMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ROSMessage)
    MergeFrom(*source);
  }
}

void ROSMessage::MergeFrom(const ROSMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ROSMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw().size() > 0) {

    raw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_);
  }
  if (from.world_to_local().size() > 0) {

    world_to_local_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.world_to_local_);
  }
}

void ROSMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ROSMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROSMessage::CopyFrom(const ROSMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ROSMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROSMessage::IsInitialized() const {
  return true;
}

void ROSMessage::Swap(ROSMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROSMessage::InternalSwap(ROSMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  raw_.Swap(&other->raw_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  world_to_local_.Swap(&other->world_to_local_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ROSMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ROSTopicSubscriptionConfig::InitAsDefaultInstance() {
}
class ROSTopicSubscriptionConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROSTopicSubscriptionConfig::kTopicFieldNumber;
const int ROSTopicSubscriptionConfig::kIncludeTransformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROSTopicSubscriptionConfig::ROSTopicSubscriptionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ROSTopicSubscriptionConfig)
}
ROSTopicSubscriptionConfig::ROSTopicSubscriptionConfig(const ROSTopicSubscriptionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  include_transform_ = from.include_transform_;
  // @@protoc_insertion_point(copy_constructor:v1.model.ROSTopicSubscriptionConfig)
}

void ROSTopicSubscriptionConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto.base);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  include_transform_ = false;
}

ROSTopicSubscriptionConfig::~ROSTopicSubscriptionConfig() {
  // @@protoc_insertion_point(destructor:v1.model.ROSTopicSubscriptionConfig)
  SharedDtor();
}

void ROSTopicSubscriptionConfig::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ROSTopicSubscriptionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROSTopicSubscriptionConfig& ROSTopicSubscriptionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ROSTopicSubscriptionConfig_protos_2fmodel_2fv1_2fros_2eproto.base);
  return *internal_default_instance();
}


void ROSTopicSubscriptionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ROSTopicSubscriptionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  include_transform_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ROSTopicSubscriptionConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ROSTopicSubscriptionConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string topic = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.ROSTopicSubscriptionConfig.topic");
        object = msg->mutable_topic();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool include_transform = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_include_transform(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROSTopicSubscriptionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ROSTopicSubscriptionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopicSubscriptionConfig.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_transform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_transform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ROSTopicSubscriptionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ROSTopicSubscriptionConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ROSTopicSubscriptionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ROSTopicSubscriptionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopicSubscriptionConfig.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // bool include_transform = 2;
  if (this->include_transform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->include_transform(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ROSTopicSubscriptionConfig)
}

::google::protobuf::uint8* ROSTopicSubscriptionConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ROSTopicSubscriptionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopicSubscriptionConfig.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // bool include_transform = 2;
  if (this->include_transform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->include_transform(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ROSTopicSubscriptionConfig)
  return target;
}

size_t ROSTopicSubscriptionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ROSTopicSubscriptionConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // bool include_transform = 2;
  if (this->include_transform() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROSTopicSubscriptionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ROSTopicSubscriptionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ROSTopicSubscriptionConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ROSTopicSubscriptionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ROSTopicSubscriptionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ROSTopicSubscriptionConfig)
    MergeFrom(*source);
  }
}

void ROSTopicSubscriptionConfig::MergeFrom(const ROSTopicSubscriptionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ROSTopicSubscriptionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.include_transform() != 0) {
    set_include_transform(from.include_transform());
  }
}

void ROSTopicSubscriptionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ROSTopicSubscriptionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROSTopicSubscriptionConfig::CopyFrom(const ROSTopicSubscriptionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ROSTopicSubscriptionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROSTopicSubscriptionConfig::IsInitialized() const {
  return true;
}

void ROSTopicSubscriptionConfig::Swap(ROSTopicSubscriptionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROSTopicSubscriptionConfig::InternalSwap(ROSTopicSubscriptionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(include_transform_, other->include_transform_);
}

::google::protobuf::Metadata ROSTopicSubscriptionConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto[kIndexInFileMessages];
}


// ===================================================================

ROSTopic_TagsEntry_DoNotUse::ROSTopic_TagsEntry_DoNotUse() {}
ROSTopic_TagsEntry_DoNotUse::ROSTopic_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ROSTopic_TagsEntry_DoNotUse::MergeFrom(const ROSTopic_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ROSTopic_TagsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto[2];
}
void ROSTopic_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROSTopic_TagsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ROSTopic_TagsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.ROSTopic.TagsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "v1.model.ROSTopic.TagsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ROSTopic::InitAsDefaultInstance() {
}
class ROSTopic::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROSTopic::kNameFieldNumber;
const int ROSTopic::kDataTypeFieldNumber;
const int ROSTopic::kMsgDescFieldNumber;
const int ROSTopic::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROSTopic::ROSTopic()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.model.ROSTopic)
}
ROSTopic::ROSTopic(const ROSTopic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_type().size() > 0) {
    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  msg_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_desc().size() > 0) {
    msg_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_desc_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.ROSTopic)
}

void ROSTopic::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ROSTopic::~ROSTopic() {
  // @@protoc_insertion_point(destructor:v1.model.ROSTopic)
  SharedDtor();
}

void ROSTopic::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ROSTopic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROSTopic& ROSTopic::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ROSTopic_protos_2fmodel_2fv1_2fros_2eproto.base);
  return *internal_default_instance();
}


void ROSTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ROSTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ROSTopic::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ROSTopic*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.ROSTopic.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string data_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.ROSTopic.data_type");
        object = msg->mutable_data_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string msg_desc = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("v1.model.ROSTopic.msg_desc");
        object = msg->mutable_msg_desc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> tags = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::v1::model::ROSTopic_TagsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->tags_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROSTopic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.model.ROSTopic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopic.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_type().data(), static_cast<int>(this->data_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopic.data_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_desc().data(), static_cast<int>(this->msg_desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopic.msg_desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          ROSTopic_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ROSTopic_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopic.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.model.ROSTopic.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.model.ROSTopic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.model.ROSTopic)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ROSTopic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.model.ROSTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string data_type = 2;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.data_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_type(), output);
  }

  // string msg_desc = 3;
  if (this->msg_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_desc().data(), static_cast<int>(this->msg_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.msg_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_desc(), output);
  }

  // map<string, string> tags = 4;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ROSTopic.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ROSTopic.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ROSTopic_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ROSTopic_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.model.ROSTopic)
}

::google::protobuf::uint8* ROSTopic::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ROSTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string data_type = 2;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.data_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_type(), target);
  }

  // string msg_desc = 3;
  if (this->msg_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_desc().data(), static_cast<int>(this->msg_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.model.ROSTopic.msg_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_desc(), target);
  }

  // map<string, string> tags = 4;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ROSTopic.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v1.model.ROSTopic.TagsEntry.value");
      }
    };

    if (false &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ROSTopic_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ROSTopic_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ROSTopic)
  return target;
}

size_t ROSTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ROSTopic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<ROSTopic_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string data_type = 2;
  if (this->data_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_type());
  }

  // string msg_desc = 3;
  if (this->msg_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_desc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROSTopic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.model.ROSTopic)
  GOOGLE_DCHECK_NE(&from, this);
  const ROSTopic* source =
      ::google::protobuf::DynamicCastToGenerated<ROSTopic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.model.ROSTopic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.model.ROSTopic)
    MergeFrom(*source);
  }
}

void ROSTopic::MergeFrom(const ROSTopic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ROSTopic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data_type().size() > 0) {

    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  if (from.msg_desc().size() > 0) {

    msg_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_desc_);
  }
}

void ROSTopic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.model.ROSTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROSTopic::CopyFrom(const ROSTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ROSTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROSTopic::IsInitialized() const {
  return true;
}

void ROSTopic::Swap(ROSTopic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROSTopic::InternalSwap(ROSTopic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.Swap(&other->tags_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_type_.Swap(&other->data_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_desc_.Swap(&other->msg_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ROSTopic::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protos_2fmodel_2fv1_2fros_2eproto);
  return ::file_level_metadata_protos_2fmodel_2fv1_2fros_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace v1
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::v1::model::ROSMessage* Arena::CreateMaybeMessage< ::v1::model::ROSMessage >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ROSMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ROSTopicSubscriptionConfig* Arena::CreateMaybeMessage< ::v1::model::ROSTopicSubscriptionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ROSTopicSubscriptionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ROSTopic_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::v1::model::ROSTopic_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ROSTopic_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ROSTopic* Arena::CreateMaybeMessage< ::v1::model::ROSTopic >(Arena* arena) {
  return Arena::CreateInternal< ::v1::model::ROSTopic >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
